name: "AUNet"

layer {
  name: "data"
  type: "Data"
  top: "data"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 176 
    mean_value: 128
    scale: 0.0078125
  }
  data_param {
    source: "BP4D_combine_1_2_ldb"
    batch_size: 8
    backend: LMDB
  }
}

layer {
  name: "label"
  type: "Data"
  top: "label"
  data_param {
    source: "BP4D_combine_1_2_AUoccur_ldb"
    batch_size: 8
    backend: LMDB
  }
  include: { phase: TRAIN }
}

layer {
  name: "weight"
  type: "Data"
  top: "weight"
  data_param {
    source: "BP4D_combine_1_2_weight_ldb"
    batch_size: 8
    backend: LMDB
  }
  include: { phase: TRAIN }
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      
    }
  }
}

layer{
  name: "conv1_branch1_division"
  type: "Division"
  bottom: "conv1"
  top: "out1_branch1_1"
  top: "out1_branch1_2"
  top: "out1_branch1_3"
  top: "out1_branch1_4"
  top: "out1_branch1_5"
  top: "out1_branch1_6"
  top: "out1_branch1_7"
  top: "out1_branch1_8"
  top: "out1_branch1_9"
  top: "out1_branch1_10"
  top: "out1_branch1_11"
  top: "out1_branch1_12"
  top: "out1_branch1_13"
  top: "out1_branch1_14"
  top: "out1_branch1_15"
  top: "out1_branch1_16"
  top: "out1_branch1_17"
  top: "out1_branch1_18"
  top: "out1_branch1_19"
  top: "out1_branch1_20"
  top: "out1_branch1_21"
  top: "out1_branch1_22"
  top: "out1_branch1_23"
  top: "out1_branch1_24"
  top: "out1_branch1_25"
  top: "out1_branch1_26"
  top: "out1_branch1_27"
  top: "out1_branch1_28"
  top: "out1_branch1_29"
  top: "out1_branch1_30"
  top: "out1_branch1_31"
  top: "out1_branch1_32"
  top: "out1_branch1_33"
  top: "out1_branch1_34"
  top: "out1_branch1_35"
  top: "out1_branch1_36"
  top: "out1_branch1_37"
  top: "out1_branch1_38"
  top: "out1_branch1_39"
  top: "out1_branch1_40"
  top: "out1_branch1_41"
  top: "out1_branch1_42"
  top: "out1_branch1_43"
  top: "out1_branch1_44"
  top: "out1_branch1_45"
  top: "out1_branch1_46"
  top: "out1_branch1_47"
  top: "out1_branch1_48"
  top: "out1_branch1_49"
  top: "out1_branch1_50"
  top: "out1_branch1_51"
  top: "out1_branch1_52"
  top: "out1_branch1_53"
  top: "out1_branch1_54"
  top: "out1_branch1_55"
  top: "out1_branch1_56"
  top: "out1_branch1_57"
  top: "out1_branch1_58"
  top: "out1_branch1_59"
  top: "out1_branch1_60"
  top: "out1_branch1_61"
  top: "out1_branch1_62"
  top: "out1_branch1_63"
  top: "out1_branch1_64"
  division_param{
  width: 22
  height: 22

  xcoord: 0
  xcoord: 22
  xcoord: 44
  xcoord: 66
  xcoord: 88
  xcoord: 110
  xcoord: 132
  xcoord: 154
  
  
  xcoord: 0
  xcoord: 22
  xcoord: 44
  xcoord: 66
  xcoord: 88
  xcoord: 110
  xcoord: 132
  xcoord: 154


  xcoord: 0
  xcoord: 22
  xcoord: 44
  xcoord: 66
  xcoord: 88
  xcoord: 110
  xcoord: 132
  xcoord: 154


  xcoord: 0
  xcoord: 22
  xcoord: 44
  xcoord: 66
  xcoord: 88
  xcoord: 110
  xcoord: 132
  xcoord: 154
 

  xcoord: 0
  xcoord: 22
  xcoord: 44
  xcoord: 66
  xcoord: 88
  xcoord: 110
  xcoord: 132
  xcoord: 154

  
  xcoord: 0
  xcoord: 22
  xcoord: 44
  xcoord: 66
  xcoord: 88
  xcoord: 110
  xcoord: 132
  xcoord: 154
 

  xcoord: 0
  xcoord: 22
  xcoord: 44
  xcoord: 66
  xcoord: 88
  xcoord: 110
  xcoord: 132
  xcoord: 154

  xcoord: 0
  xcoord: 22
  xcoord: 44
  xcoord: 66
  xcoord: 88
  xcoord: 110
  xcoord: 132
  xcoord: 154
 


  ycoord: 0
  ycoord: 0
  ycoord: 0
  ycoord: 0
  ycoord: 0
  ycoord: 0
  ycoord: 0
  ycoord: 0

  ycoord: 22
  ycoord: 22
  ycoord: 22
  ycoord: 22
  ycoord: 22
  ycoord: 22
  ycoord: 22
  ycoord: 22

  ycoord: 44
  ycoord: 44
  ycoord: 44
  ycoord: 44
  ycoord: 44
  ycoord: 44
  ycoord: 44
  ycoord: 44

  ycoord: 66
  ycoord: 66
  ycoord: 66
  ycoord: 66
  ycoord: 66
  ycoord: 66
  ycoord: 66
  ycoord: 66

  ycoord: 88
  ycoord: 88
  ycoord: 88
  ycoord: 88
  ycoord: 88
  ycoord: 88
  ycoord: 88
  ycoord: 88

  ycoord: 110
  ycoord: 110
  ycoord: 110
  ycoord: 110
  ycoord: 110
  ycoord: 110
  ycoord: 110
  ycoord: 110

  ycoord: 132
  ycoord: 132
  ycoord: 132
  ycoord: 132
  ycoord: 132
  ycoord: 132
  ycoord: 132
  ycoord: 132

  ycoord: 154
  ycoord: 154
  ycoord: 154
  ycoord: 154
  ycoord: 154
  ycoord: 154
  ycoord: 154
  ycoord: 154
  }
}

layer {
  name: "out1_branch1_1_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_1"
  top: "out1_branch1_1"
}

layer {
  name: "out1_branch1_2_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_2"
  top: "out1_branch1_2"
}

layer {
  name: "out1_branch1_3_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_3"
  top: "out1_branch1_3"
}

layer {
  name: "out1_branch1_4_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_4"
  top: "out1_branch1_4"
}

layer {
  name: "out1_branch1_5_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_5"
  top: "out1_branch1_5"
}

layer {
  name: "out1_branch1_6_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_6"
  top: "out1_branch1_6"
}

layer {
  name: "out1_branch1_7_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_7"
  top: "out1_branch1_7"
}

layer {
  name: "out1_branch1_8_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_8"
  top: "out1_branch1_8"
}

layer {
  name: "out1_branch1_9_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_9"
  top: "out1_branch1_9"
}

layer {
  name: "out1_branch1_10_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_10"
  top: "out1_branch1_10"
}

layer {
  name: "out1_branch1_11_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_11"
  top: "out1_branch1_11"
}

layer {
  name: "out1_branch1_12_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_12"
  top: "out1_branch1_12"
}

layer {
  name: "out1_branch1_13_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_13"
  top: "out1_branch1_13"
}

layer {
  name: "out1_branch1_14_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_14"
  top: "out1_branch1_14"
}

layer {
  name: "out1_branch1_15_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_15"
  top: "out1_branch1_15"
}

layer {
  name: "out1_branch1_16_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_16"
  top: "out1_branch1_16"
}

layer {
  name: "out1_branch1_17_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_17"
  top: "out1_branch1_17"
}

layer {
  name: "out1_branch1_18_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_18"
  top: "out1_branch1_18"
}

layer {
  name: "out1_branch1_19_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_19"
  top: "out1_branch1_19"
}

layer {
  name: "out1_branch1_20_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_20"
  top: "out1_branch1_20"
}

layer {
  name: "out1_branch1_21_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_21"
  top: "out1_branch1_21"
}

layer {
  name: "out1_branch1_22_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_22"
  top: "out1_branch1_22"
}

layer {
  name: "out1_branch1_23_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_23"
  top: "out1_branch1_23"
}

layer {
  name: "out1_branch1_24_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_24"
  top: "out1_branch1_24"
}

layer {
  name: "out1_branch1_25_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_25"
  top: "out1_branch1_25"
}

layer {
  name: "out1_branch1_26_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_26"
  top: "out1_branch1_26"
}

layer {
  name: "out1_branch1_27_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_27"
  top: "out1_branch1_27"
}

layer {
  name: "out1_branch1_28_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_28"
  top: "out1_branch1_28"
}

layer {
  name: "out1_branch1_29_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_29"
  top: "out1_branch1_29"
}

layer {
  name: "out1_branch1_30_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_30"
  top: "out1_branch1_30"
}

layer {
  name: "out1_branch1_31_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_31"
  top: "out1_branch1_31"
}

layer {
  name: "out1_branch1_32_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_32"
  top: "out1_branch1_32"
}

layer {
  name: "out1_branch1_33_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_33"
  top: "out1_branch1_33"
}

layer {
  name: "out1_branch1_34_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_34"
  top: "out1_branch1_34"
}

layer {
  name: "out1_branch1_35_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_35"
  top: "out1_branch1_35"
}

layer {
  name: "out1_branch1_36_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_36"
  top: "out1_branch1_36"
}

layer {
  name: "out1_branch1_37_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_37"
  top: "out1_branch1_37"
}

layer {
  name: "out1_branch1_38_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_38"
  top: "out1_branch1_38"
}

layer {
  name: "out1_branch1_39_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_39"
  top: "out1_branch1_39"
}

layer {
  name: "out1_branch1_40_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_40"
  top: "out1_branch1_40"
}

layer {
  name: "out1_branch1_41_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_41"
  top: "out1_branch1_41"
}

layer {
  name: "out1_branch1_42_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_42"
  top: "out1_branch1_42"
}

layer {
  name: "out1_branch1_43_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_43"
  top: "out1_branch1_43"
}

layer {
  name: "out1_branch1_44_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_44"
  top: "out1_branch1_44"
}

layer {
  name: "out1_branch1_45_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_45"
  top: "out1_branch1_45"
}

layer {
  name: "out1_branch1_46_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_46"
  top: "out1_branch1_46"
}

layer {
  name: "out1_branch1_47_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_47"
  top: "out1_branch1_47"
}

layer {
  name: "out1_branch1_48_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_48"
  top: "out1_branch1_48"
}

layer {
  name: "out1_branch1_49_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_49"
  top: "out1_branch1_49"
}

layer {
  name: "out1_branch1_50_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_50"
  top: "out1_branch1_50"
}

layer {
  name: "out1_branch1_51_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_51"
  top: "out1_branch1_51"
}

layer {
  name: "out1_branch1_52_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_52"
  top: "out1_branch1_52"
}

layer {
  name: "out1_branch1_53_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_53"
  top: "out1_branch1_53"
}

layer {
  name: "out1_branch1_54_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_54"
  top: "out1_branch1_54"
}

layer {
  name: "out1_branch1_55_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_55"
  top: "out1_branch1_55"
}

layer {
  name: "out1_branch1_56_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_56"
  top: "out1_branch1_56"
}

layer {
  name: "out1_branch1_57_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_57"
  top: "out1_branch1_57"
}

layer {
  name: "out1_branch1_58_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_58"
  top: "out1_branch1_58"
}

layer {
  name: "out1_branch1_59_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_59"
  top: "out1_branch1_59"
}

layer {
  name: "out1_branch1_60_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_60"
  top: "out1_branch1_60"
}

layer {
  name: "out1_branch1_61_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_61"
  top: "out1_branch1_61"
}

layer {
  name: "out1_branch1_62_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_62"
  top: "out1_branch1_62"
}

layer {
  name: "out1_branch1_63_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_63"
  top: "out1_branch1_63"
}

layer {
  name: "out1_branch1_64_bn"
  type: "BatchNorm"
  bottom: "out1_branch1_64"
  top: "out1_branch1_64"
}

layer {
  name: "out1_branch1_1_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_1"
  top: "out1_branch1_1"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_2_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_2"
  top: "out1_branch1_2"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_3_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_3"
  top: "out1_branch1_3"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_4_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_4"
  top: "out1_branch1_4"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_5_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_5"
  top: "out1_branch1_5"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_6_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_6"
  top: "out1_branch1_6"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_7_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_7"
  top: "out1_branch1_7"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_8_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_8"
  top: "out1_branch1_8"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_9_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_9"
  top: "out1_branch1_9"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_10_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_10"
  top: "out1_branch1_10"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_11_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_11"
  top: "out1_branch1_11"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_12_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_12"
  top: "out1_branch1_12"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_13_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_13"
  top: "out1_branch1_13"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_14_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_14"
  top: "out1_branch1_14"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_15_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_15"
  top: "out1_branch1_15"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_16_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_16"
  top: "out1_branch1_16"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_17_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_17"
  top: "out1_branch1_17"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_18_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_18"
  top: "out1_branch1_18"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_19_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_19"
  top: "out1_branch1_19"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_20_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_20"
  top: "out1_branch1_20"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_21_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_21"
  top: "out1_branch1_21"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_22_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_22"
  top: "out1_branch1_22"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_23_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_23"
  top: "out1_branch1_23"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_24_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_24"
  top: "out1_branch1_24"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_25_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_25"
  top: "out1_branch1_25"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_26_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_26"
  top: "out1_branch1_26"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_27_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_27"
  top: "out1_branch1_27"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_28_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_28"
  top: "out1_branch1_28"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_29_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_29"
  top: "out1_branch1_29"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_30_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_30"
  top: "out1_branch1_30"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_31_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_31"
  top: "out1_branch1_31"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_32_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_32"
  top: "out1_branch1_32"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_33_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_33"
  top: "out1_branch1_33"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_34_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_34"
  top: "out1_branch1_34"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_35_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_35"
  top: "out1_branch1_35"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_36_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_36"
  top: "out1_branch1_36"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_37_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_37"
  top: "out1_branch1_37"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_38_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_38"
  top: "out1_branch1_38"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_39_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_39"
  top: "out1_branch1_39"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_40_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_40"
  top: "out1_branch1_40"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_41_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_41"
  top: "out1_branch1_41"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_42_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_42"
  top: "out1_branch1_42"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_43_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_43"
  top: "out1_branch1_43"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_44_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_44"
  top: "out1_branch1_44"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_45_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_45"
  top: "out1_branch1_45"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_46_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_46"
  top: "out1_branch1_46"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_47_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_47"
  top: "out1_branch1_47"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_48_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_48"
  top: "out1_branch1_48"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_49_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_49"
  top: "out1_branch1_49"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_50_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_50"
  top: "out1_branch1_50"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_51_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_51"
  top: "out1_branch1_51"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_52_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_52"
  top: "out1_branch1_52"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_53_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_53"
  top: "out1_branch1_53"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_54_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_54"
  top: "out1_branch1_54"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_55_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_55"
  top: "out1_branch1_55"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_56_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_56"
  top: "out1_branch1_56"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_57_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_57"
  top: "out1_branch1_57"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_58_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_58"
  top: "out1_branch1_58"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_59_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_59"
  top: "out1_branch1_59"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_60_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_60"
  top: "out1_branch1_60"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_61_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_61"
  top: "out1_branch1_61"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_62_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_62"
  top: "out1_branch1_62"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_63_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_63"
  top: "out1_branch1_63"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_64_bn_scale"
  type: "Scale"
  bottom: "out1_branch1_64"
  top: "out1_branch1_64"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch1_1_relu"
  type: "ReLU"
  bottom: "out1_branch1_1"
  top: "out1_branch1_1"
}

layer {
  name: "out1_branch1_2_relu"
  type: "ReLU"
  bottom: "out1_branch1_2"
  top: "out1_branch1_2"
}

layer {
  name: "out1_branch1_3_relu"
  type: "ReLU"
  bottom: "out1_branch1_3"
  top: "out1_branch1_3"
}

layer {
  name: "out1_branch1_4_relu"
  type: "ReLU"
  bottom: "out1_branch1_4"
  top: "out1_branch1_4"
}

layer {
  name: "out1_branch1_5_relu"
  type: "ReLU"
  bottom: "out1_branch1_5"
  top: "out1_branch1_5"
}

layer {
  name: "out1_branch1_6_relu"
  type: "ReLU"
  bottom: "out1_branch1_6"
  top: "out1_branch1_6"
}

layer {
  name: "out1_branch1_7_relu"
  type: "ReLU"
  bottom: "out1_branch1_7"
  top: "out1_branch1_7"
}

layer {
  name: "out1_branch1_8_relu"
  type: "ReLU"
  bottom: "out1_branch1_8"
  top: "out1_branch1_8"
}

layer {
  name: "out1_branch1_9_relu"
  type: "ReLU"
  bottom: "out1_branch1_9"
  top: "out1_branch1_9"
}

layer {
  name: "out1_branch1_10_relu"
  type: "ReLU"
  bottom: "out1_branch1_10"
  top: "out1_branch1_10"
}

layer {
  name: "out1_branch1_11_relu"
  type: "ReLU"
  bottom: "out1_branch1_11"
  top: "out1_branch1_11"
}

layer {
  name: "out1_branch1_12_relu"
  type: "ReLU"
  bottom: "out1_branch1_12"
  top: "out1_branch1_12"
}

layer {
  name: "out1_branch1_13_relu"
  type: "ReLU"
  bottom: "out1_branch1_13"
  top: "out1_branch1_13"
}

layer {
  name: "out1_branch1_14_relu"
  type: "ReLU"
  bottom: "out1_branch1_14"
  top: "out1_branch1_14"
}

layer {
  name: "out1_branch1_15_relu"
  type: "ReLU"
  bottom: "out1_branch1_15"
  top: "out1_branch1_15"
}

layer {
  name: "out1_branch1_16_relu"
  type: "ReLU"
  bottom: "out1_branch1_16"
  top: "out1_branch1_16"
}

layer {
  name: "out1_branch1_17_relu"
  type: "ReLU"
  bottom: "out1_branch1_17"
  top: "out1_branch1_17"
}

layer {
  name: "out1_branch1_18_relu"
  type: "ReLU"
  bottom: "out1_branch1_18"
  top: "out1_branch1_18"
}

layer {
  name: "out1_branch1_19_relu"
  type: "ReLU"
  bottom: "out1_branch1_19"
  top: "out1_branch1_19"
}

layer {
  name: "out1_branch1_20_relu"
  type: "ReLU"
  bottom: "out1_branch1_20"
  top: "out1_branch1_20"
}

layer {
  name: "out1_branch1_21_relu"
  type: "ReLU"
  bottom: "out1_branch1_21"
  top: "out1_branch1_21"
}

layer {
  name: "out1_branch1_22_relu"
  type: "ReLU"
  bottom: "out1_branch1_22"
  top: "out1_branch1_22"
}

layer {
  name: "out1_branch1_23_relu"
  type: "ReLU"
  bottom: "out1_branch1_23"
  top: "out1_branch1_23"
}

layer {
  name: "out1_branch1_24_relu"
  type: "ReLU"
  bottom: "out1_branch1_24"
  top: "out1_branch1_24"
}

layer {
  name: "out1_branch1_25_relu"
  type: "ReLU"
  bottom: "out1_branch1_25"
  top: "out1_branch1_25"
}

layer {
  name: "out1_branch1_26_relu"
  type: "ReLU"
  bottom: "out1_branch1_26"
  top: "out1_branch1_26"
}

layer {
  name: "out1_branch1_27_relu"
  type: "ReLU"
  bottom: "out1_branch1_27"
  top: "out1_branch1_27"
}

layer {
  name: "out1_branch1_28_relu"
  type: "ReLU"
  bottom: "out1_branch1_28"
  top: "out1_branch1_28"
}

layer {
  name: "out1_branch1_29_relu"
  type: "ReLU"
  bottom: "out1_branch1_29"
  top: "out1_branch1_29"
}

layer {
  name: "out1_branch1_30_relu"
  type: "ReLU"
  bottom: "out1_branch1_30"
  top: "out1_branch1_30"
}

layer {
  name: "out1_branch1_31_relu"
  type: "ReLU"
  bottom: "out1_branch1_31"
  top: "out1_branch1_31"
}

layer {
  name: "out1_branch1_32_relu"
  type: "ReLU"
  bottom: "out1_branch1_32"
  top: "out1_branch1_32"
}

layer {
  name: "out1_branch1_33_relu"
  type: "ReLU"
  bottom: "out1_branch1_33"
  top: "out1_branch1_33"
}

layer {
  name: "out1_branch1_34_relu"
  type: "ReLU"
  bottom: "out1_branch1_34"
  top: "out1_branch1_34"
}

layer {
  name: "out1_branch1_35_relu"
  type: "ReLU"
  bottom: "out1_branch1_35"
  top: "out1_branch1_35"
}

layer {
  name: "out1_branch1_36_relu"
  type: "ReLU"
  bottom: "out1_branch1_36"
  top: "out1_branch1_36"
}

layer {
  name: "out1_branch1_37_relu"
  type: "ReLU"
  bottom: "out1_branch1_37"
  top: "out1_branch1_37"
}

layer {
  name: "out1_branch1_38_relu"
  type: "ReLU"
  bottom: "out1_branch1_38"
  top: "out1_branch1_38"
}

layer {
  name: "out1_branch1_39_relu"
  type: "ReLU"
  bottom: "out1_branch1_39"
  top: "out1_branch1_39"
}

layer {
  name: "out1_branch1_40_relu"
  type: "ReLU"
  bottom: "out1_branch1_40"
  top: "out1_branch1_40"
}

layer {
  name: "out1_branch1_41_relu"
  type: "ReLU"
  bottom: "out1_branch1_41"
  top: "out1_branch1_41"
}

layer {
  name: "out1_branch1_42_relu"
  type: "ReLU"
  bottom: "out1_branch1_42"
  top: "out1_branch1_42"
}

layer {
  name: "out1_branch1_43_relu"
  type: "ReLU"
  bottom: "out1_branch1_43"
  top: "out1_branch1_43"
}

layer {
  name: "out1_branch1_44_relu"
  type: "ReLU"
  bottom: "out1_branch1_44"
  top: "out1_branch1_44"
}

layer {
  name: "out1_branch1_45_relu"
  type: "ReLU"
  bottom: "out1_branch1_45"
  top: "out1_branch1_45"
}

layer {
  name: "out1_branch1_46_relu"
  type: "ReLU"
  bottom: "out1_branch1_46"
  top: "out1_branch1_46"
}

layer {
  name: "out1_branch1_47_relu"
  type: "ReLU"
  bottom: "out1_branch1_47"
  top: "out1_branch1_47"
}

layer {
  name: "out1_branch1_48_relu"
  type: "ReLU"
  bottom: "out1_branch1_48"
  top: "out1_branch1_48"
}

layer {
  name: "out1_branch1_49_relu"
  type: "ReLU"
  bottom: "out1_branch1_49"
  top: "out1_branch1_49"
}

layer {
  name: "out1_branch1_50_relu"
  type: "ReLU"
  bottom: "out1_branch1_50"
  top: "out1_branch1_50"
}

layer {
  name: "out1_branch1_51_relu"
  type: "ReLU"
  bottom: "out1_branch1_51"
  top: "out1_branch1_51"
}

layer {
  name: "out1_branch1_52_relu"
  type: "ReLU"
  bottom: "out1_branch1_52"
  top: "out1_branch1_52"
}

layer {
  name: "out1_branch1_53_relu"
  type: "ReLU"
  bottom: "out1_branch1_53"
  top: "out1_branch1_53"
}

layer {
  name: "out1_branch1_54_relu"
  type: "ReLU"
  bottom: "out1_branch1_54"
  top: "out1_branch1_54"
}

layer {
  name: "out1_branch1_55_relu"
  type: "ReLU"
  bottom: "out1_branch1_55"
  top: "out1_branch1_55"
}

layer {
  name: "out1_branch1_56_relu"
  type: "ReLU"
  bottom: "out1_branch1_56"
  top: "out1_branch1_56"
}

layer {
  name: "out1_branch1_57_relu"
  type: "ReLU"
  bottom: "out1_branch1_57"
  top: "out1_branch1_57"
}

layer {
  name: "out1_branch1_58_relu"
  type: "ReLU"
  bottom: "out1_branch1_58"
  top: "out1_branch1_58"
}

layer {
  name: "out1_branch1_59_relu"
  type: "ReLU"
  bottom: "out1_branch1_59"
  top: "out1_branch1_59"
}

layer {
  name: "out1_branch1_60_relu"
  type: "ReLU"
  bottom: "out1_branch1_60"
  top: "out1_branch1_60"
}

layer {
  name: "out1_branch1_61_relu"
  type: "ReLU"
  bottom: "out1_branch1_61"
  top: "out1_branch1_61"
}

layer {
  name: "out1_branch1_62_relu"
  type: "ReLU"
  bottom: "out1_branch1_62"
  top: "out1_branch1_62"
}

layer {
  name: "out1_branch1_63_relu"
  type: "ReLU"
  bottom: "out1_branch1_63"
  top: "out1_branch1_63"
}

layer {
  name: "out1_branch1_64_relu"
  type: "ReLU"
  bottom: "out1_branch1_64"
  top: "out1_branch1_64"
}


layer {
  name: "res1_branch1_1"
  type: "Convolution"
  bottom: "out1_branch1_1"
  top: "res1_branch1_1"
	  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_2"
  type: "Convolution"
  bottom: "out1_branch1_2"
  top: "res1_branch1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_3"
  type: "Convolution"
  bottom: "out1_branch1_3"
  top: "res1_branch1_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_4"
  type: "Convolution"
  bottom: "out1_branch1_4"
  top: "res1_branch1_4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_5"
  type: "Convolution"
  bottom: "out1_branch1_5"
  top: "res1_branch1_5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_6"
  type: "Convolution"
  bottom: "out1_branch1_6"
  top: "res1_branch1_6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_7"
  type: "Convolution"
  bottom: "out1_branch1_7"
  top: "res1_branch1_7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_8"
  type: "Convolution"
  bottom: "out1_branch1_8"
  top: "res1_branch1_8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_9"
  type: "Convolution"
  bottom: "out1_branch1_9"
  top: "res1_branch1_9"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_10"
  type: "Convolution"
  bottom: "out1_branch1_10"
  top: "res1_branch1_10"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_11"
  type: "Convolution"
  bottom: "out1_branch1_11"
  top: "res1_branch1_11"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_12"
  type: "Convolution"
  bottom: "out1_branch1_12"
  top: "res1_branch1_12"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_13"
  type: "Convolution"
  bottom: "out1_branch1_13"
  top: "res1_branch1_13"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_14"
  type: "Convolution"
  bottom: "out1_branch1_14"
  top: "res1_branch1_14"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_15"
  type: "Convolution"
  bottom: "out1_branch1_15"
  top: "res1_branch1_15"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_16"
  type: "Convolution"
  bottom: "out1_branch1_16"
  top: "res1_branch1_16"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_17"
  type: "Convolution"
  bottom: "out1_branch1_17"
  top: "res1_branch1_17"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_18"
  type: "Convolution"
  bottom: "out1_branch1_18"
  top: "res1_branch1_18"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_19"
  type: "Convolution"
  bottom: "out1_branch1_19"
  top: "res1_branch1_19"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_20"
  type: "Convolution"
  bottom: "out1_branch1_20"
  top: "res1_branch1_20"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_21"
  type: "Convolution"
  bottom: "out1_branch1_21"
  top: "res1_branch1_21"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_22"
  type: "Convolution"
  bottom: "out1_branch1_22"
  top: "res1_branch1_22"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_23"
  type: "Convolution"
  bottom: "out1_branch1_23"
  top: "res1_branch1_23"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_24"
  type: "Convolution"
  bottom: "out1_branch1_24"
  top: "res1_branch1_24"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_25"
  type: "Convolution"
  bottom: "out1_branch1_25"
  top: "res1_branch1_25"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_26"
  type: "Convolution"
  bottom: "out1_branch1_26"
  top: "res1_branch1_26"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_27"
  type: "Convolution"
  bottom: "out1_branch1_27"
  top: "res1_branch1_27"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_28"
  type: "Convolution"
  bottom: "out1_branch1_28"
  top: "res1_branch1_28"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_29"
  type: "Convolution"
  bottom: "out1_branch1_29"
  top: "res1_branch1_29"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_30"
  type: "Convolution"
  bottom: "out1_branch1_30"
  top: "res1_branch1_30"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_31"
  type: "Convolution"
  bottom: "out1_branch1_31"
  top: "res1_branch1_31"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_32"
  type: "Convolution"
  bottom: "out1_branch1_32"
  top: "res1_branch1_32"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_33"
  type: "Convolution"
  bottom: "out1_branch1_33"
  top: "res1_branch1_33"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_34"
  type: "Convolution"
  bottom: "out1_branch1_34"
  top: "res1_branch1_34"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_35"
  type: "Convolution"
  bottom: "out1_branch1_35"
  top: "res1_branch1_35"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_36"
  type: "Convolution"
  bottom: "out1_branch1_36"
  top: "res1_branch1_36"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_37"
  type: "Convolution"
  bottom: "out1_branch1_37"
  top: "res1_branch1_37"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_38"
  type: "Convolution"
  bottom: "out1_branch1_38"
  top: "res1_branch1_38"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_39"
  type: "Convolution"
  bottom: "out1_branch1_39"
  top: "res1_branch1_39"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_40"
  type: "Convolution"
  bottom: "out1_branch1_40"
  top: "res1_branch1_40"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_41"
  type: "Convolution"
  bottom: "out1_branch1_41"
  top: "res1_branch1_41"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_42"
  type: "Convolution"
  bottom: "out1_branch1_42"
  top: "res1_branch1_42"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_43"
  type: "Convolution"
  bottom: "out1_branch1_43"
  top: "res1_branch1_43"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_44"
  type: "Convolution"
  bottom: "out1_branch1_44"
  top: "res1_branch1_44"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_45"
  type: "Convolution"
  bottom: "out1_branch1_45"
  top: "res1_branch1_45"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_46"
  type: "Convolution"
  bottom: "out1_branch1_46"
  top: "res1_branch1_46"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_47"
  type: "Convolution"
  bottom: "out1_branch1_47"
  top: "res1_branch1_47"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_48"
  type: "Convolution"
  bottom: "out1_branch1_48"
  top: "res1_branch1_48"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_49"
  type: "Convolution"
  bottom: "out1_branch1_49"
  top: "res1_branch1_49"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_50"
  type: "Convolution"
  bottom: "out1_branch1_50"
  top: "res1_branch1_50"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_51"
  type: "Convolution"
  bottom: "out1_branch1_51"
  top: "res1_branch1_51"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_52"
  type: "Convolution"
  bottom: "out1_branch1_52"
  top: "res1_branch1_52"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_53"
  type: "Convolution"
  bottom: "out1_branch1_53"
  top: "res1_branch1_53"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_54"
  type: "Convolution"
  bottom: "out1_branch1_54"
  top: "res1_branch1_54"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_55"
  type: "Convolution"
  bottom: "out1_branch1_55"
  top: "res1_branch1_55"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_56"
  type: "Convolution"
  bottom: "out1_branch1_56"
  top: "res1_branch1_56"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_57"
  type: "Convolution"
  bottom: "out1_branch1_57"
  top: "res1_branch1_57"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_58"
  type: "Convolution"
  bottom: "out1_branch1_58"
  top: "res1_branch1_58"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_59"
  type: "Convolution"
  bottom: "out1_branch1_59"
  top: "res1_branch1_59"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_60"
  type: "Convolution"
  bottom: "out1_branch1_60"
  top: "res1_branch1_60"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_61"
  type: "Convolution"
  bottom: "out1_branch1_61"
  top: "res1_branch1_61"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_62"
  type: "Convolution"
  bottom: "out1_branch1_62"
  top: "res1_branch1_62"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_63"
  type: "Convolution"
  bottom: "out1_branch1_63"
  top: "res1_branch1_63"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch1_64"
  type: "Convolution"
  bottom: "out1_branch1_64"
  top: "res1_branch1_64"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  name: "conv1_branch1_combination"
  type: "Combination"
  bottom: "res1_branch1_1"
  bottom: "res1_branch1_2"
  bottom: "res1_branch1_3"
  bottom: "res1_branch1_4"
  bottom: "res1_branch1_5"
  bottom: "res1_branch1_6"
  bottom: "res1_branch1_7"
  bottom: "res1_branch1_8"
  bottom: "res1_branch1_9"
  bottom: "res1_branch1_10"
  bottom: "res1_branch1_11"
  bottom: "res1_branch1_12"
  bottom: "res1_branch1_13"
  bottom: "res1_branch1_14"
  bottom: "res1_branch1_15"
  bottom: "res1_branch1_16"
  bottom: "res1_branch1_17"
  bottom: "res1_branch1_18"
  bottom: "res1_branch1_19"
  bottom: "res1_branch1_20"
  bottom: "res1_branch1_21"
  bottom: "res1_branch1_22"
  bottom: "res1_branch1_23"
  bottom: "res1_branch1_24"
  bottom: "res1_branch1_25"
  bottom: "res1_branch1_26"
  bottom: "res1_branch1_27"
  bottom: "res1_branch1_28"
  bottom: "res1_branch1_29"
  bottom: "res1_branch1_30"
  bottom: "res1_branch1_31"
  bottom: "res1_branch1_32"
  bottom: "res1_branch1_33"
  bottom: "res1_branch1_34"
  bottom: "res1_branch1_35"
  bottom: "res1_branch1_36"
  bottom: "res1_branch1_37"
  bottom: "res1_branch1_38"
  bottom: "res1_branch1_39"
  bottom: "res1_branch1_40"
  bottom: "res1_branch1_41"
  bottom: "res1_branch1_42"
  bottom: "res1_branch1_43"
  bottom: "res1_branch1_44"
  bottom: "res1_branch1_45"
  bottom: "res1_branch1_46"
  bottom: "res1_branch1_47"
  bottom: "res1_branch1_48"
  bottom: "res1_branch1_49"
  bottom: "res1_branch1_50"
  bottom: "res1_branch1_51"
  bottom: "res1_branch1_52"
  bottom: "res1_branch1_53"
  bottom: "res1_branch1_54"
  bottom: "res1_branch1_55"
  bottom: "res1_branch1_56"
  bottom: "res1_branch1_57"
  bottom: "res1_branch1_58"
  bottom: "res1_branch1_59"
  bottom: "res1_branch1_60"
  bottom: "res1_branch1_61"
  bottom: "res1_branch1_62"
  bottom: "res1_branch1_63"
  bottom: "res1_branch1_64"
  top: "conv1_branch1_combination"
  
	  combination_param{
	  xcoord: 0
	  xcoord: 22
	  xcoord: 44
	  xcoord: 66
	  xcoord: 88
	  xcoord: 110
	  xcoord: 132
	  xcoord: 154
	  
	  
	  xcoord: 0
	  xcoord: 22
	  xcoord: 44
	  xcoord: 66
	  xcoord: 88
	  xcoord: 110
	  xcoord: 132
	  xcoord: 154


	  xcoord: 0
	  xcoord: 22
	  xcoord: 44
	  xcoord: 66
	  xcoord: 88
	  xcoord: 110
	  xcoord: 132
	  xcoord: 154


	   xcoord: 0
	  xcoord: 22
	  xcoord: 44
	  xcoord: 66
	  xcoord: 88
	  xcoord: 110
	  xcoord: 132
	  xcoord: 154
	 

	   xcoord: 0
	  xcoord: 22
	  xcoord: 44
	  xcoord: 66
	  xcoord: 88
	  xcoord: 110
	  xcoord: 132
	  xcoord: 154

	  
	  xcoord: 0
	  xcoord: 22
	  xcoord: 44
	  xcoord: 66
	  xcoord: 88
	  xcoord: 110
	  xcoord: 132
	  xcoord: 154
	 

	  xcoord: 0
	  xcoord: 22
	  xcoord: 44
	  xcoord: 66
	  xcoord: 88
	  xcoord: 110
	  xcoord: 132
	  xcoord: 154


	  xcoord: 0
	  xcoord: 22
	  xcoord: 44
	  xcoord: 66
	  xcoord: 88
	  xcoord: 110
	  xcoord: 132
	  xcoord: 154
	 


	  ycoord: 0
	  ycoord: 0
	  ycoord: 0
	  ycoord: 0
	  ycoord: 0
	  ycoord: 0
	  ycoord: 0
	  ycoord: 0

	  ycoord: 22
	  ycoord: 22
	  ycoord: 22
	  ycoord: 22
	  ycoord: 22
	  ycoord: 22
	  ycoord: 22
	  ycoord: 22

	  ycoord: 44
	  ycoord: 44
	  ycoord: 44
	  ycoord: 44
	  ycoord: 44
	  ycoord: 44
	  ycoord: 44
	  ycoord: 44

	  ycoord: 66
	  ycoord: 66
	  ycoord: 66
	  ycoord: 66
	  ycoord: 66
	  ycoord: 66
	  ycoord: 66
	  ycoord: 66

	  ycoord: 88
	  ycoord: 88
	  ycoord: 88
	  ycoord: 88
	  ycoord: 88
	  ycoord: 88
	  ycoord: 88
	  ycoord: 88

	  ycoord: 110
	  ycoord: 110
	  ycoord: 110
	  ycoord: 110
	  ycoord: 110
	  ycoord: 110
	  ycoord: 110
	  ycoord: 110

	  ycoord: 132
	  ycoord: 132
	  ycoord: 132
	  ycoord: 132
	  ycoord: 132
	  ycoord: 132
	  ycoord: 132
	  ycoord: 132

	  ycoord: 154
	  ycoord: 154
	  ycoord: 154
	  ycoord: 154
	  ycoord: 154
	  ycoord: 154
	  ycoord: 154
	  ycoord: 154
  }
}

layer{
  name: "conv1_branch2_division"
  type: "Division"
  bottom: "conv1_branch1_combination"
  top: "out1_branch2_1"
  top: "out1_branch2_2"
  top: "out1_branch2_3"
  top: "out1_branch2_4"
  top: "out1_branch2_5"
  top: "out1_branch2_6"
  top: "out1_branch2_7"
  top: "out1_branch2_8"
  top: "out1_branch2_9"
  top: "out1_branch2_10"
  top: "out1_branch2_11"
  top: "out1_branch2_12"
  top: "out1_branch2_13"
  top: "out1_branch2_14"
  top: "out1_branch2_15"
  top: "out1_branch2_16"
  division_param{
  width: 44
  height: 44

  xcoord: 0
  xcoord: 44
  xcoord: 88
  xcoord: 132
  
  
  xcoord: 0
  xcoord: 44
  xcoord: 88
  xcoord: 132


  xcoord: 0
  xcoord: 44
  xcoord: 88
  xcoord: 132


  xcoord: 0
  xcoord: 44
  xcoord: 88
  xcoord: 132 


  ycoord: 0
  ycoord: 0
  ycoord: 0
  ycoord: 0 


  ycoord: 44
  ycoord: 44
  ycoord: 44
  ycoord: 44


  ycoord: 88
  ycoord: 88
  ycoord: 88
  ycoord: 88


  ycoord: 132
  ycoord: 132
  ycoord: 132
  ycoord: 132
  }
}

layer {
  name: "out1_branch2_1_bn"
  type: "BatchNorm"
  bottom: "out1_branch2_1"
  top: "out1_branch2_1"
}

layer {
  name: "out1_branch2_2_bn"
  type: "BatchNorm"
  bottom: "out1_branch2_2"
  top: "out1_branch2_2"
}

layer {
  name: "out1_branch2_3_bn"
  type: "BatchNorm"
  bottom: "out1_branch2_3"
  top: "out1_branch2_3"
}

layer {
  name: "out1_branch2_4_bn"
  type: "BatchNorm"
  bottom: "out1_branch2_4"
  top: "out1_branch2_4"
}

layer {
  name: "out1_branch2_5_bn"
  type: "BatchNorm"
  bottom: "out1_branch2_5"
  top: "out1_branch2_5"
}

layer {
  name: "out1_branch2_6_bn"
  type: "BatchNorm"
  bottom: "out1_branch2_6"
  top: "out1_branch2_6"
}

layer {
  name: "out1_branch2_7_bn"
  type: "BatchNorm"
  bottom: "out1_branch2_7"
  top: "out1_branch2_7"
}

layer {
  name: "out1_branch2_8_bn"
  type: "BatchNorm"
  bottom: "out1_branch2_8"
  top: "out1_branch2_8"
}

layer {
  name: "out1_branch2_9_bn"
  type: "BatchNorm"
  bottom: "out1_branch2_9"
  top: "out1_branch2_9"
}

layer {
  name: "out1_branch2_10_bn"
  type: "BatchNorm"
  bottom: "out1_branch2_10"
  top: "out1_branch2_10"
}

layer {
  name: "out1_branch2_11_bn"
  type: "BatchNorm"
  bottom: "out1_branch2_11"
  top: "out1_branch2_11"
}

layer {
  name: "out1_branch2_12_bn"
  type: "BatchNorm"
  bottom: "out1_branch2_12"
  top: "out1_branch2_12"
}

layer {
  name: "out1_branch2_13_bn"
  type: "BatchNorm"
  bottom: "out1_branch2_13"
  top: "out1_branch2_13"
}

layer {
  name: "out1_branch2_14_bn"
  type: "BatchNorm"
  bottom: "out1_branch2_14"
  top: "out1_branch2_14"
}

layer {
  name: "out1_branch2_15_bn"
  type: "BatchNorm"
  bottom: "out1_branch2_15"
  top: "out1_branch2_15"
}

layer {
  name: "out1_branch2_16_bn"
  type: "BatchNorm"
  bottom: "out1_branch2_16"
  top: "out1_branch2_16"
}

layer {
  name: "out1_branch2_1_bn_scale"
  type: "Scale"
  bottom: "out1_branch2_1"
  top: "out1_branch2_1"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch2_2_bn_scale"
  type: "Scale"
  bottom: "out1_branch2_2"
  top: "out1_branch2_2"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch2_3_bn_scale"
  type: "Scale"
  bottom: "out1_branch2_3"
  top: "out1_branch2_3"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch2_4_bn_scale"
  type: "Scale"
  bottom: "out1_branch2_4"
  top: "out1_branch2_4"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch2_5_bn_scale"
  type: "Scale"
  bottom: "out1_branch2_5"
  top: "out1_branch2_5"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch2_6_bn_scale"
  type: "Scale"
  bottom: "out1_branch2_6"
  top: "out1_branch2_6"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch2_7_bn_scale"
  type: "Scale"
  bottom: "out1_branch2_7"
  top: "out1_branch2_7"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch2_8_bn_scale"
  type: "Scale"
  bottom: "out1_branch2_8"
  top: "out1_branch2_8"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch2_9_bn_scale"
  type: "Scale"
  bottom: "out1_branch2_9"
  top: "out1_branch2_9"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch2_10_bn_scale"
  type: "Scale"
  bottom: "out1_branch2_10"
  top: "out1_branch2_10"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch2_11_bn_scale"
  type: "Scale"
  bottom: "out1_branch2_11"
  top: "out1_branch2_11"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch2_12_bn_scale"
  type: "Scale"
  bottom: "out1_branch2_12"
  top: "out1_branch2_12"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch2_13_bn_scale"
  type: "Scale"
  bottom: "out1_branch2_13"
  top: "out1_branch2_13"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch2_14_bn_scale"
  type: "Scale"
  bottom: "out1_branch2_14"
  top: "out1_branch2_14"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch2_15_bn_scale"
  type: "Scale"
  bottom: "out1_branch2_15"
  top: "out1_branch2_15"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch2_16_bn_scale"
  type: "Scale"
  bottom: "out1_branch2_16"
  top: "out1_branch2_16"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch2_1_relu"
  type: "ReLU"
  bottom: "out1_branch2_1"
  top: "out1_branch2_1"
}

layer {
  name: "out1_branch2_2_relu"
  type: "ReLU"
  bottom: "out1_branch2_2"
  top: "out1_branch2_2"
}

layer {
  name: "out1_branch2_3_relu"
  type: "ReLU"
  bottom: "out1_branch2_3"
  top: "out1_branch2_3"
}

layer {
  name: "out1_branch2_4_relu"
  type: "ReLU"
  bottom: "out1_branch2_4"
  top: "out1_branch2_4"
}

layer {
  name: "out1_branch2_5_relu"
  type: "ReLU"
  bottom: "out1_branch2_5"
  top: "out1_branch2_5"
}

layer {
  name: "out1_branch2_6_relu"
  type: "ReLU"
  bottom: "out1_branch2_6"
  top: "out1_branch2_6"
}

layer {
  name: "out1_branch2_7_relu"
  type: "ReLU"
  bottom: "out1_branch2_7"
  top: "out1_branch2_7"
}

layer {
  name: "out1_branch2_8_relu"
  type: "ReLU"
  bottom: "out1_branch2_8"
  top: "out1_branch2_8"
}

layer {
  name: "out1_branch2_9_relu"
  type: "ReLU"
  bottom: "out1_branch2_9"
  top: "out1_branch2_9"
}

layer {
  name: "out1_branch2_10_relu"
  type: "ReLU"
  bottom: "out1_branch2_10"
  top: "out1_branch2_10"
}

layer {
  name: "out1_branch2_11_relu"
  type: "ReLU"
  bottom: "out1_branch2_11"
  top: "out1_branch2_11"
}

layer {
  name: "out1_branch2_12_relu"
  type: "ReLU"
  bottom: "out1_branch2_12"
  top: "out1_branch2_12"
}

layer {
  name: "out1_branch2_13_relu"
  type: "ReLU"
  bottom: "out1_branch2_13"
  top: "out1_branch2_13"
}

layer {
  name: "out1_branch2_14_relu"
  type: "ReLU"
  bottom: "out1_branch2_14"
  top: "out1_branch2_14"
}

layer {
  name: "out1_branch2_15_relu"
  type: "ReLU"
  bottom: "out1_branch2_15"
  top: "out1_branch2_15"
}

layer {
  name: "out1_branch2_16_relu"
  type: "ReLU"
  bottom: "out1_branch2_16"
  top: "out1_branch2_16"
}

layer {
  name: "res1_branch2_1"
  type: "Convolution"
  bottom: "out1_branch2_1"
  top: "res1_branch2_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch2_2"
  type: "Convolution"
  bottom: "out1_branch2_2"
  top: "res1_branch2_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch2_3"
  type: "Convolution"
  bottom: "out1_branch2_3"
  top: "res1_branch2_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch2_4"
  type: "Convolution"
  bottom: "out1_branch2_4"
  top: "res1_branch2_4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch2_5"
  type: "Convolution"
  bottom: "out1_branch2_5"
  top: "res1_branch2_5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch2_6"
  type: "Convolution"
  bottom: "out1_branch2_6"
  top: "res1_branch2_6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch2_7"
  type: "Convolution"
  bottom: "out1_branch2_7"
  top: "res1_branch2_7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch2_8"
  type: "Convolution"
  bottom: "out1_branch2_8"
  top: "res1_branch2_8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch2_9"
  type: "Convolution"
  bottom: "out1_branch2_9"
  top: "res1_branch2_9"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch2_10"
  type: "Convolution"
  bottom: "out1_branch2_10"
  top: "res1_branch2_10"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch2_11"
  type: "Convolution"
  bottom: "out1_branch2_11"
  top: "res1_branch2_11"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch2_12"
  type: "Convolution"
  bottom: "out1_branch2_12"
  top: "res1_branch2_12"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch2_13"
  type: "Convolution"
  bottom: "out1_branch2_13"
  top: "res1_branch2_13"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch2_14"
  type: "Convolution"
  bottom: "out1_branch2_14"
  top: "res1_branch2_14"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch2_15"
  type: "Convolution"
  bottom: "out1_branch2_15"
  top: "res1_branch2_15"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch2_16"
  type: "Convolution"
  bottom: "out1_branch2_16"
  top: "res1_branch2_16"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}


layer{
  name: "conv1_branch2_combination"
  type: "Combination"
  bottom: "res1_branch2_1"
  bottom: "res1_branch2_2"
  bottom: "res1_branch2_3"
  bottom: "res1_branch2_4"
  bottom: "res1_branch2_5"
  bottom: "res1_branch2_6"
  bottom: "res1_branch2_7"
  bottom: "res1_branch2_8"
  bottom: "res1_branch2_9"
  bottom: "res1_branch2_10"
  bottom: "res1_branch2_11"
  bottom: "res1_branch2_12"
  bottom: "res1_branch2_13"
  bottom: "res1_branch2_14"
  bottom: "res1_branch2_15"
  bottom: "res1_branch2_16"
  top: "conv1_branch2_combination"
  
  combination_param{
  xcoord: 0
  xcoord: 44
  xcoord: 88
  xcoord: 132
  
  
  xcoord: 0
  xcoord: 44
  xcoord: 88
  xcoord: 132


  xcoord: 0
  xcoord: 44
  xcoord: 88
  xcoord: 132


  xcoord: 0
  xcoord: 44
  xcoord: 88
  xcoord: 132 


  ycoord: 0
  ycoord: 0
  ycoord: 0
  ycoord: 0 


  ycoord: 44
  ycoord: 44
  ycoord: 44
  ycoord: 44


  ycoord: 88
  ycoord: 88
  ycoord: 88
  ycoord: 88


  ycoord: 132
  ycoord: 132
  ycoord: 132
  ycoord: 132
  }
}

layer{
  name: "conv1_branch3_division"
  type: "Division"
  bottom: "conv1_branch2_combination"
  top: "out1_branch3_1"
  top: "out1_branch3_2"
  top: "out1_branch3_3"
  top: "out1_branch3_4"
  division_param{
  width: 88
  height: 88

  xcoord: 0
  xcoord: 88
  
  xcoord: 0
  xcoord: 88
 
  ycoord: 0
  ycoord: 0

  ycoord: 88
  ycoord: 88
  }
}

layer {
  name: "out1_branch3_1_bn"
  type: "BatchNorm"
  bottom: "out1_branch3_1"
  top: "out1_branch3_1"
}

layer {
  name: "out1_branch3_2_bn"
  type: "BatchNorm"
  bottom: "out1_branch3_2"
  top: "out1_branch3_2"
}

layer {
  name: "out1_branch3_3_bn"
  type: "BatchNorm"
  bottom: "out1_branch3_3"
  top: "out1_branch3_3"
}

layer {
  name: "out1_branch3_4_bn"
  type: "BatchNorm"
  bottom: "out1_branch3_4"
  top: "out1_branch3_4"
}


layer {
  name: "out1_branch3_1_bn_scale"
  type: "Scale"
  bottom: "out1_branch3_1"
  top: "out1_branch3_1"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch3_2_bn_scale"
  type: "Scale"
  bottom: "out1_branch3_2"
  top: "out1_branch3_2"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch3_3_bn_scale"
  type: "Scale"
  bottom: "out1_branch3_3"
  top: "out1_branch3_3"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out1_branch3_4_bn_scale"
  type: "Scale"
  bottom: "out1_branch3_4"
  top: "out1_branch3_4"
  scale_param {
  	bias_term: true
  }
}


layer {
  name: "out1_branch3_1_relu"
  type: "ReLU"
  bottom: "out1_branch3_1"
  top: "out1_branch3_1"
}

layer {
  name: "out1_branch3_2_relu"
  type: "ReLU"
  bottom: "out1_branch3_2"
  top: "out1_branch3_2"
}

layer {
  name: "out1_branch3_3_relu"
  type: "ReLU"
  bottom: "out1_branch3_3"
  top: "out1_branch3_3"
}

layer {
  name: "out1_branch3_4_relu"
  type: "ReLU"
  bottom: "out1_branch3_4"
  top: "out1_branch3_4"
}


layer {
  name: "res1_branch3_1"
  type: "Convolution"
  bottom: "out1_branch3_1"
  top: "res1_branch3_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch3_2"
  type: "Convolution"
  bottom: "out1_branch3_2"
  top: "res1_branch3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch3_3"
  type: "Convolution"
  bottom: "out1_branch3_3"
  top: "res1_branch3_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res1_branch3_4"
  type: "Convolution"
  bottom: "out1_branch3_4"
  top: "res1_branch3_4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}


layer{
  name: "conv1_branch3_combination"
  type: "Combination"
  bottom: "res1_branch3_1"
  bottom: "res1_branch3_2"
  bottom: "res1_branch3_3"
  bottom: "res1_branch3_4"
  top: "conv1_branch3_combination"
  
  combination_param{
  xcoord: 0
  xcoord: 88
  
  xcoord: 0
  xcoord: 88
 
  ycoord: 0
  ycoord: 0

  ycoord: 88
  ycoord: 88
  }
}

layer {
  name: "conv1_combination"
  bottom: "conv1_branch1_combination"
  bottom: "conv1_branch2_combination"
  bottom: "conv1_branch3_combination"
  top: "conv1_combination"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

layer{
  type: "Eltwise"
  name: "conv1_add"
  bottom: "conv1"
  bottom: "conv1_combination"
	top: "conv1_add"
	eltwise_param { 
		operation: SUM 
	}
}

layer {
  name: "conv1_add_bn"
  type: "BatchNorm"
  bottom: "conv1_add"
  top: "conv1_add"
}

layer {
  name: "conv1_add_bn_scale"
  type: "Scale"
  bottom: "conv1_add"
  top: "conv1_add"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "conv1_add_relu"
  type: "ReLU"
  bottom: "conv1_add"
  top: "conv1_add"
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_add"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      
    }
  }
}

layer{
  name: "conv2_branch1_division"
  type: "Division"
  bottom: "conv2"
  top: "out2_branch1_1"
  top: "out2_branch1_2"
  top: "out2_branch1_3"
  top: "out2_branch1_4"
  top: "out2_branch1_5"
  top: "out2_branch1_6"
  top: "out2_branch1_7"
  top: "out2_branch1_8"
  top: "out2_branch1_9"
  top: "out2_branch1_10"
  top: "out2_branch1_11"
  top: "out2_branch1_12"
  top: "out2_branch1_13"
  top: "out2_branch1_14"
  top: "out2_branch1_15"
  top: "out2_branch1_16"
  top: "out2_branch1_17"
  top: "out2_branch1_18"
  top: "out2_branch1_19"
  top: "out2_branch1_20"
  top: "out2_branch1_21"
  top: "out2_branch1_22"
  top: "out2_branch1_23"
  top: "out2_branch1_24"
  top: "out2_branch1_25"
  top: "out2_branch1_26"
  top: "out2_branch1_27"
  top: "out2_branch1_28"
  top: "out2_branch1_29"
  top: "out2_branch1_30"
  top: "out2_branch1_31"
  top: "out2_branch1_32"
  top: "out2_branch1_33"
  top: "out2_branch1_34"
  top: "out2_branch1_35"
  top: "out2_branch1_36"
  top: "out2_branch1_37"
  top: "out2_branch1_38"
  top: "out2_branch1_39"
  top: "out2_branch1_40"
  top: "out2_branch1_41"
  top: "out2_branch1_42"
  top: "out2_branch1_43"
  top: "out2_branch1_44"
  top: "out2_branch1_45"
  top: "out2_branch1_46"
  top: "out2_branch1_47"
  top: "out2_branch1_48"
  top: "out2_branch1_49"
  top: "out2_branch1_50"
  top: "out2_branch1_51"
  top: "out2_branch1_52"
  top: "out2_branch1_53"
  top: "out2_branch1_54"
  top: "out2_branch1_55"
  top: "out2_branch1_56"
  top: "out2_branch1_57"
  top: "out2_branch1_58"
  top: "out2_branch1_59"
  top: "out2_branch1_60"
  top: "out2_branch1_61"
  top: "out2_branch1_62"
  top: "out2_branch1_63"
  top: "out2_branch1_64"
  division_param{
width: 11
  height: 11

  xcoord: 0
  xcoord: 11
  xcoord: 22
  xcoord: 33
  xcoord: 44
  xcoord: 55
  xcoord: 66
  xcoord: 77
  
  
  xcoord: 0
  xcoord: 11
  xcoord: 22
  xcoord: 33
  xcoord: 44
  xcoord: 55
  xcoord: 66
  xcoord: 77


  xcoord: 0
  xcoord: 11
  xcoord: 22
  xcoord: 33
  xcoord: 44
  xcoord: 55
  xcoord: 66
  xcoord: 77


  xcoord: 0
  xcoord: 11
  xcoord: 22
  xcoord: 33
  xcoord: 44
  xcoord: 55
  xcoord: 66
  xcoord: 77
 

  xcoord: 0
  xcoord: 11
  xcoord: 22
  xcoord: 33
  xcoord: 44
  xcoord: 55
  xcoord: 66
  xcoord: 77

  
  xcoord: 0
  xcoord: 11
  xcoord: 22
  xcoord: 33
  xcoord: 44
  xcoord: 55
  xcoord: 66
  xcoord: 77
 

  xcoord: 0
  xcoord: 11
  xcoord: 22
  xcoord: 33
  xcoord: 44
  xcoord: 55
  xcoord: 66
  xcoord: 77

  xcoord: 0
  xcoord: 11
  xcoord: 22
  xcoord: 33
  xcoord: 44
  xcoord: 55
  xcoord: 66
  xcoord: 77
 


  ycoord: 0
  ycoord: 0
  ycoord: 0
  ycoord: 0
  ycoord: 0
  ycoord: 0
  ycoord: 0
  ycoord: 0

  ycoord: 11
  ycoord: 11
  ycoord: 11
  ycoord: 11
  ycoord: 11
  ycoord: 11
  ycoord: 11
  ycoord: 11

  ycoord: 22
  ycoord: 22
  ycoord: 22
  ycoord: 22
  ycoord: 22
  ycoord: 22
  ycoord: 22
  ycoord: 22

  ycoord: 33
  ycoord: 33
  ycoord: 33
  ycoord: 33
  ycoord: 33
  ycoord: 33
  ycoord: 33
  ycoord: 33

  ycoord: 44
  ycoord: 44
  ycoord: 44
  ycoord: 44
  ycoord: 44
  ycoord: 44
  ycoord: 44
  ycoord: 44

  ycoord: 55
  ycoord: 55
  ycoord: 55
  ycoord: 55
  ycoord: 55
  ycoord: 55
  ycoord: 55
  ycoord: 55

  ycoord: 66
  ycoord: 66
  ycoord: 66
  ycoord: 66
  ycoord: 66
  ycoord: 66
  ycoord: 66
  ycoord: 66

  ycoord: 77
  ycoord: 77
  ycoord: 77
  ycoord: 77
  ycoord: 77
  ycoord: 77
  ycoord: 77
  ycoord: 77
  }
}

layer {
  name: "out2_branch1_1_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_1"
  top: "out2_branch1_1"
}

layer {
  name: "out2_branch1_2_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_2"
  top: "out2_branch1_2"
}

layer {
  name: "out2_branch1_3_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_3"
  top: "out2_branch1_3"
}

layer {
  name: "out2_branch1_4_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_4"
  top: "out2_branch1_4"
}

layer {
  name: "out2_branch1_5_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_5"
  top: "out2_branch1_5"
}

layer {
  name: "out2_branch1_6_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_6"
  top: "out2_branch1_6"
}

layer {
  name: "out2_branch1_7_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_7"
  top: "out2_branch1_7"
}

layer {
  name: "out2_branch1_8_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_8"
  top: "out2_branch1_8"
}

layer {
  name: "out2_branch1_9_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_9"
  top: "out2_branch1_9"
}

layer {
  name: "out2_branch1_10_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_10"
  top: "out2_branch1_10"
}

layer {
  name: "out2_branch1_11_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_11"
  top: "out2_branch1_11"
}

layer {
  name: "out2_branch1_12_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_12"
  top: "out2_branch1_12"
}

layer {
  name: "out2_branch1_13_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_13"
  top: "out2_branch1_13"
}

layer {
  name: "out2_branch1_14_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_14"
  top: "out2_branch1_14"
}

layer {
  name: "out2_branch1_15_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_15"
  top: "out2_branch1_15"
}

layer {
  name: "out2_branch1_16_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_16"
  top: "out2_branch1_16"
}

layer {
  name: "out2_branch1_17_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_17"
  top: "out2_branch1_17"
}

layer {
  name: "out2_branch1_18_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_18"
  top: "out2_branch1_18"
}

layer {
  name: "out2_branch1_19_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_19"
  top: "out2_branch1_19"
}

layer {
  name: "out2_branch1_20_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_20"
  top: "out2_branch1_20"
}

layer {
  name: "out2_branch1_21_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_21"
  top: "out2_branch1_21"
}

layer {
  name: "out2_branch1_22_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_22"
  top: "out2_branch1_22"
}

layer {
  name: "out2_branch1_23_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_23"
  top: "out2_branch1_23"
}

layer {
  name: "out2_branch1_24_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_24"
  top: "out2_branch1_24"
}

layer {
  name: "out2_branch1_25_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_25"
  top: "out2_branch1_25"
}

layer {
  name: "out2_branch1_26_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_26"
  top: "out2_branch1_26"
}

layer {
  name: "out2_branch1_27_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_27"
  top: "out2_branch1_27"
}

layer {
  name: "out2_branch1_28_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_28"
  top: "out2_branch1_28"
}

layer {
  name: "out2_branch1_29_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_29"
  top: "out2_branch1_29"
}

layer {
  name: "out2_branch1_30_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_30"
  top: "out2_branch1_30"
}

layer {
  name: "out2_branch1_31_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_31"
  top: "out2_branch1_31"
}

layer {
  name: "out2_branch1_32_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_32"
  top: "out2_branch1_32"
}

layer {
  name: "out2_branch1_33_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_33"
  top: "out2_branch1_33"
}

layer {
  name: "out2_branch1_34_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_34"
  top: "out2_branch1_34"
}

layer {
  name: "out2_branch1_35_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_35"
  top: "out2_branch1_35"
}

layer {
  name: "out2_branch1_36_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_36"
  top: "out2_branch1_36"
}

layer {
  name: "out2_branch1_37_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_37"
  top: "out2_branch1_37"
}

layer {
  name: "out2_branch1_38_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_38"
  top: "out2_branch1_38"
}

layer {
  name: "out2_branch1_39_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_39"
  top: "out2_branch1_39"
}

layer {
  name: "out2_branch1_40_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_40"
  top: "out2_branch1_40"
}

layer {
  name: "out2_branch1_41_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_41"
  top: "out2_branch1_41"
}

layer {
  name: "out2_branch1_42_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_42"
  top: "out2_branch1_42"
}

layer {
  name: "out2_branch1_43_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_43"
  top: "out2_branch1_43"
}

layer {
  name: "out2_branch1_44_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_44"
  top: "out2_branch1_44"
}

layer {
  name: "out2_branch1_45_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_45"
  top: "out2_branch1_45"
}

layer {
  name: "out2_branch1_46_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_46"
  top: "out2_branch1_46"
}

layer {
  name: "out2_branch1_47_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_47"
  top: "out2_branch1_47"
}

layer {
  name: "out2_branch1_48_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_48"
  top: "out2_branch1_48"
}

layer {
  name: "out2_branch1_49_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_49"
  top: "out2_branch1_49"
}

layer {
  name: "out2_branch1_50_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_50"
  top: "out2_branch1_50"
}

layer {
  name: "out2_branch1_51_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_51"
  top: "out2_branch1_51"
}

layer {
  name: "out2_branch1_52_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_52"
  top: "out2_branch1_52"
}

layer {
  name: "out2_branch1_53_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_53"
  top: "out2_branch1_53"
}

layer {
  name: "out2_branch1_54_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_54"
  top: "out2_branch1_54"
}

layer {
  name: "out2_branch1_55_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_55"
  top: "out2_branch1_55"
}

layer {
  name: "out2_branch1_56_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_56"
  top: "out2_branch1_56"
}

layer {
  name: "out2_branch1_57_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_57"
  top: "out2_branch1_57"
}

layer {
  name: "out2_branch1_58_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_58"
  top: "out2_branch1_58"
}

layer {
  name: "out2_branch1_59_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_59"
  top: "out2_branch1_59"
}

layer {
  name: "out2_branch1_60_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_60"
  top: "out2_branch1_60"
}

layer {
  name: "out2_branch1_61_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_61"
  top: "out2_branch1_61"
}

layer {
  name: "out2_branch1_62_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_62"
  top: "out2_branch1_62"
}

layer {
  name: "out2_branch1_63_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_63"
  top: "out2_branch1_63"
}

layer {
  name: "out2_branch1_64_bn"
  type: "BatchNorm"
  bottom: "out2_branch1_64"
  top: "out2_branch1_64"
}

layer {
  name: "out2_branch1_1_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_1"
  top: "out2_branch1_1"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_2_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_2"
  top: "out2_branch1_2"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_3_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_3"
  top: "out2_branch1_3"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_4_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_4"
  top: "out2_branch1_4"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_5_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_5"
  top: "out2_branch1_5"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_6_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_6"
  top: "out2_branch1_6"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_7_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_7"
  top: "out2_branch1_7"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_8_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_8"
  top: "out2_branch1_8"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_9_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_9"
  top: "out2_branch1_9"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_10_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_10"
  top: "out2_branch1_10"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_11_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_11"
  top: "out2_branch1_11"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_12_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_12"
  top: "out2_branch1_12"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_13_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_13"
  top: "out2_branch1_13"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_14_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_14"
  top: "out2_branch1_14"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_15_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_15"
  top: "out2_branch1_15"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_16_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_16"
  top: "out2_branch1_16"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_17_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_17"
  top: "out2_branch1_17"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_18_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_18"
  top: "out2_branch1_18"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_19_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_19"
  top: "out2_branch1_19"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_20_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_20"
  top: "out2_branch1_20"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_21_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_21"
  top: "out2_branch1_21"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_22_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_22"
  top: "out2_branch1_22"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_23_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_23"
  top: "out2_branch1_23"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_24_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_24"
  top: "out2_branch1_24"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_25_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_25"
  top: "out2_branch1_25"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_26_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_26"
  top: "out2_branch1_26"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_27_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_27"
  top: "out2_branch1_27"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_28_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_28"
  top: "out2_branch1_28"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_29_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_29"
  top: "out2_branch1_29"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_30_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_30"
  top: "out2_branch1_30"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_31_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_31"
  top: "out2_branch1_31"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_32_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_32"
  top: "out2_branch1_32"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_33_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_33"
  top: "out2_branch1_33"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_34_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_34"
  top: "out2_branch1_34"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_35_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_35"
  top: "out2_branch1_35"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_36_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_36"
  top: "out2_branch1_36"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_37_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_37"
  top: "out2_branch1_37"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_38_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_38"
  top: "out2_branch1_38"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_39_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_39"
  top: "out2_branch1_39"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_40_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_40"
  top: "out2_branch1_40"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_41_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_41"
  top: "out2_branch1_41"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_42_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_42"
  top: "out2_branch1_42"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_43_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_43"
  top: "out2_branch1_43"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_44_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_44"
  top: "out2_branch1_44"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_45_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_45"
  top: "out2_branch1_45"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_46_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_46"
  top: "out2_branch1_46"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_47_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_47"
  top: "out2_branch1_47"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_48_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_48"
  top: "out2_branch1_48"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_49_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_49"
  top: "out2_branch1_49"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_50_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_50"
  top: "out2_branch1_50"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_51_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_51"
  top: "out2_branch1_51"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_52_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_52"
  top: "out2_branch1_52"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_53_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_53"
  top: "out2_branch1_53"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_54_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_54"
  top: "out2_branch1_54"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_55_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_55"
  top: "out2_branch1_55"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_56_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_56"
  top: "out2_branch1_56"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_57_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_57"
  top: "out2_branch1_57"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_58_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_58"
  top: "out2_branch1_58"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_59_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_59"
  top: "out2_branch1_59"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_60_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_60"
  top: "out2_branch1_60"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_61_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_61"
  top: "out2_branch1_61"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_62_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_62"
  top: "out2_branch1_62"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_63_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_63"
  top: "out2_branch1_63"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_64_bn_scale"
  type: "Scale"
  bottom: "out2_branch1_64"
  top: "out2_branch1_64"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch1_1_relu"
  type: "ReLU"
  bottom: "out2_branch1_1"
  top: "out2_branch1_1"
}

layer {
  name: "out2_branch1_2_relu"
  type: "ReLU"
  bottom: "out2_branch1_2"
  top: "out2_branch1_2"
}

layer {
  name: "out2_branch1_3_relu"
  type: "ReLU"
  bottom: "out2_branch1_3"
  top: "out2_branch1_3"
}

layer {
  name: "out2_branch1_4_relu"
  type: "ReLU"
  bottom: "out2_branch1_4"
  top: "out2_branch1_4"
}

layer {
  name: "out2_branch1_5_relu"
  type: "ReLU"
  bottom: "out2_branch1_5"
  top: "out2_branch1_5"
}

layer {
  name: "out2_branch1_6_relu"
  type: "ReLU"
  bottom: "out2_branch1_6"
  top: "out2_branch1_6"
}

layer {
  name: "out2_branch1_7_relu"
  type: "ReLU"
  bottom: "out2_branch1_7"
  top: "out2_branch1_7"
}

layer {
  name: "out2_branch1_8_relu"
  type: "ReLU"
  bottom: "out2_branch1_8"
  top: "out2_branch1_8"
}

layer {
  name: "out2_branch1_9_relu"
  type: "ReLU"
  bottom: "out2_branch1_9"
  top: "out2_branch1_9"
}

layer {
  name: "out2_branch1_10_relu"
  type: "ReLU"
  bottom: "out2_branch1_10"
  top: "out2_branch1_10"
}

layer {
  name: "out2_branch1_11_relu"
  type: "ReLU"
  bottom: "out2_branch1_11"
  top: "out2_branch1_11"
}

layer {
  name: "out2_branch1_12_relu"
  type: "ReLU"
  bottom: "out2_branch1_12"
  top: "out2_branch1_12"
}

layer {
  name: "out2_branch1_13_relu"
  type: "ReLU"
  bottom: "out2_branch1_13"
  top: "out2_branch1_13"
}

layer {
  name: "out2_branch1_14_relu"
  type: "ReLU"
  bottom: "out2_branch1_14"
  top: "out2_branch1_14"
}

layer {
  name: "out2_branch1_15_relu"
  type: "ReLU"
  bottom: "out2_branch1_15"
  top: "out2_branch1_15"
}

layer {
  name: "out2_branch1_16_relu"
  type: "ReLU"
  bottom: "out2_branch1_16"
  top: "out2_branch1_16"
}

layer {
  name: "out2_branch1_17_relu"
  type: "ReLU"
  bottom: "out2_branch1_17"
  top: "out2_branch1_17"
}

layer {
  name: "out2_branch1_18_relu"
  type: "ReLU"
  bottom: "out2_branch1_18"
  top: "out2_branch1_18"
}

layer {
  name: "out2_branch1_19_relu"
  type: "ReLU"
  bottom: "out2_branch1_19"
  top: "out2_branch1_19"
}

layer {
  name: "out2_branch1_20_relu"
  type: "ReLU"
  bottom: "out2_branch1_20"
  top: "out2_branch1_20"
}

layer {
  name: "out2_branch1_21_relu"
  type: "ReLU"
  bottom: "out2_branch1_21"
  top: "out2_branch1_21"
}

layer {
  name: "out2_branch1_22_relu"
  type: "ReLU"
  bottom: "out2_branch1_22"
  top: "out2_branch1_22"
}

layer {
  name: "out2_branch1_23_relu"
  type: "ReLU"
  bottom: "out2_branch1_23"
  top: "out2_branch1_23"
}

layer {
  name: "out2_branch1_24_relu"
  type: "ReLU"
  bottom: "out2_branch1_24"
  top: "out2_branch1_24"
}

layer {
  name: "out2_branch1_25_relu"
  type: "ReLU"
  bottom: "out2_branch1_25"
  top: "out2_branch1_25"
}

layer {
  name: "out2_branch1_26_relu"
  type: "ReLU"
  bottom: "out2_branch1_26"
  top: "out2_branch1_26"
}

layer {
  name: "out2_branch1_27_relu"
  type: "ReLU"
  bottom: "out2_branch1_27"
  top: "out2_branch1_27"
}

layer {
  name: "out2_branch1_28_relu"
  type: "ReLU"
  bottom: "out2_branch1_28"
  top: "out2_branch1_28"
}

layer {
  name: "out2_branch1_29_relu"
  type: "ReLU"
  bottom: "out2_branch1_29"
  top: "out2_branch1_29"
}

layer {
  name: "out2_branch1_30_relu"
  type: "ReLU"
  bottom: "out2_branch1_30"
  top: "out2_branch1_30"
}

layer {
  name: "out2_branch1_31_relu"
  type: "ReLU"
  bottom: "out2_branch1_31"
  top: "out2_branch1_31"
}

layer {
  name: "out2_branch1_32_relu"
  type: "ReLU"
  bottom: "out2_branch1_32"
  top: "out2_branch1_32"
}

layer {
  name: "out2_branch1_33_relu"
  type: "ReLU"
  bottom: "out2_branch1_33"
  top: "out2_branch1_33"
}

layer {
  name: "out2_branch1_34_relu"
  type: "ReLU"
  bottom: "out2_branch1_34"
  top: "out2_branch1_34"
}

layer {
  name: "out2_branch1_35_relu"
  type: "ReLU"
  bottom: "out2_branch1_35"
  top: "out2_branch1_35"
}

layer {
  name: "out2_branch1_36_relu"
  type: "ReLU"
  bottom: "out2_branch1_36"
  top: "out2_branch1_36"
}

layer {
  name: "out2_branch1_37_relu"
  type: "ReLU"
  bottom: "out2_branch1_37"
  top: "out2_branch1_37"
}

layer {
  name: "out2_branch1_38_relu"
  type: "ReLU"
  bottom: "out2_branch1_38"
  top: "out2_branch1_38"
}

layer {
  name: "out2_branch1_39_relu"
  type: "ReLU"
  bottom: "out2_branch1_39"
  top: "out2_branch1_39"
}

layer {
  name: "out2_branch1_40_relu"
  type: "ReLU"
  bottom: "out2_branch1_40"
  top: "out2_branch1_40"
}

layer {
  name: "out2_branch1_41_relu"
  type: "ReLU"
  bottom: "out2_branch1_41"
  top: "out2_branch1_41"
}

layer {
  name: "out2_branch1_42_relu"
  type: "ReLU"
  bottom: "out2_branch1_42"
  top: "out2_branch1_42"
}

layer {
  name: "out2_branch1_43_relu"
  type: "ReLU"
  bottom: "out2_branch1_43"
  top: "out2_branch1_43"
}

layer {
  name: "out2_branch1_44_relu"
  type: "ReLU"
  bottom: "out2_branch1_44"
  top: "out2_branch1_44"
}

layer {
  name: "out2_branch1_45_relu"
  type: "ReLU"
  bottom: "out2_branch1_45"
  top: "out2_branch1_45"
}

layer {
  name: "out2_branch1_46_relu"
  type: "ReLU"
  bottom: "out2_branch1_46"
  top: "out2_branch1_46"
}

layer {
  name: "out2_branch1_47_relu"
  type: "ReLU"
  bottom: "out2_branch1_47"
  top: "out2_branch1_47"
}

layer {
  name: "out2_branch1_48_relu"
  type: "ReLU"
  bottom: "out2_branch1_48"
  top: "out2_branch1_48"
}

layer {
  name: "out2_branch1_49_relu"
  type: "ReLU"
  bottom: "out2_branch1_49"
  top: "out2_branch1_49"
}

layer {
  name: "out2_branch1_50_relu"
  type: "ReLU"
  bottom: "out2_branch1_50"
  top: "out2_branch1_50"
}

layer {
  name: "out2_branch1_51_relu"
  type: "ReLU"
  bottom: "out2_branch1_51"
  top: "out2_branch1_51"
}

layer {
  name: "out2_branch1_52_relu"
  type: "ReLU"
  bottom: "out2_branch1_52"
  top: "out2_branch1_52"
}

layer {
  name: "out2_branch1_53_relu"
  type: "ReLU"
  bottom: "out2_branch1_53"
  top: "out2_branch1_53"
}

layer {
  name: "out2_branch1_54_relu"
  type: "ReLU"
  bottom: "out2_branch1_54"
  top: "out2_branch1_54"
}

layer {
  name: "out2_branch1_55_relu"
  type: "ReLU"
  bottom: "out2_branch1_55"
  top: "out2_branch1_55"
}

layer {
  name: "out2_branch1_56_relu"
  type: "ReLU"
  bottom: "out2_branch1_56"
  top: "out2_branch1_56"
}

layer {
  name: "out2_branch1_57_relu"
  type: "ReLU"
  bottom: "out2_branch1_57"
  top: "out2_branch1_57"
}

layer {
  name: "out2_branch1_58_relu"
  type: "ReLU"
  bottom: "out2_branch1_58"
  top: "out2_branch1_58"
}

layer {
  name: "out2_branch1_59_relu"
  type: "ReLU"
  bottom: "out2_branch1_59"
  top: "out2_branch1_59"
}

layer {
  name: "out2_branch1_60_relu"
  type: "ReLU"
  bottom: "out2_branch1_60"
  top: "out2_branch1_60"
}

layer {
  name: "out2_branch1_61_relu"
  type: "ReLU"
  bottom: "out2_branch1_61"
  top: "out2_branch1_61"
}

layer {
  name: "out2_branch1_62_relu"
  type: "ReLU"
  bottom: "out2_branch1_62"
  top: "out2_branch1_62"
}

layer {
  name: "out2_branch1_63_relu"
  type: "ReLU"
  bottom: "out2_branch1_63"
  top: "out2_branch1_63"
}

layer {
  name: "out2_branch1_64_relu"
  type: "ReLU"
  bottom: "out2_branch1_64"
  top: "out2_branch1_64"
}

layer {
  name: "res2_branch1_1"
  type: "Convolution"
  bottom: "out2_branch1_1"
  top: "res2_branch1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_2"
  type: "Convolution"
  bottom: "out2_branch1_2"
  top: "res2_branch1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_3"
  type: "Convolution"
  bottom: "out2_branch1_3"
  top: "res2_branch1_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_4"
  type: "Convolution"
  bottom: "out2_branch1_4"
  top: "res2_branch1_4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_5"
  type: "Convolution"
  bottom: "out2_branch1_5"
  top: "res2_branch1_5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_6"
  type: "Convolution"
  bottom: "out2_branch1_6"
  top: "res2_branch1_6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_7"
  type: "Convolution"
  bottom: "out2_branch1_7"
  top: "res2_branch1_7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_8"
  type: "Convolution"
  bottom: "out2_branch1_8"
  top: "res2_branch1_8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_9"
  type: "Convolution"
  bottom: "out2_branch1_9"
  top: "res2_branch1_9"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_10"
  type: "Convolution"
  bottom: "out2_branch1_10"
  top: "res2_branch1_10"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_11"
  type: "Convolution"
  bottom: "out2_branch1_11"
  top: "res2_branch1_11"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_12"
  type: "Convolution"
  bottom: "out2_branch1_12"
  top: "res2_branch1_12"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_13"
  type: "Convolution"
  bottom: "out2_branch1_13"
  top: "res2_branch1_13"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_14"
  type: "Convolution"
  bottom: "out2_branch1_14"
  top: "res2_branch1_14"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_15"
  type: "Convolution"
  bottom: "out2_branch1_15"
  top: "res2_branch1_15"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_16"
  type: "Convolution"
  bottom: "out2_branch1_16"
  top: "res2_branch1_16"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_17"
  type: "Convolution"
  bottom: "out2_branch1_17"
  top: "res2_branch1_17"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_18"
  type: "Convolution"
  bottom: "out2_branch1_18"
  top: "res2_branch1_18"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_19"
  type: "Convolution"
  bottom: "out2_branch1_19"
  top: "res2_branch1_19"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_20"
  type: "Convolution"
  bottom: "out2_branch1_20"
  top: "res2_branch1_20"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_21"
  type: "Convolution"
  bottom: "out2_branch1_21"
  top: "res2_branch1_21"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_22"
  type: "Convolution"
  bottom: "out2_branch1_22"
  top: "res2_branch1_22"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_23"
  type: "Convolution"
  bottom: "out2_branch1_23"
  top: "res2_branch1_23"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_24"
  type: "Convolution"
  bottom: "out2_branch1_24"
  top: "res2_branch1_24"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_25"
  type: "Convolution"
  bottom: "out2_branch1_25"
  top: "res2_branch1_25"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_26"
  type: "Convolution"
  bottom: "out2_branch1_26"
  top: "res2_branch1_26"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_27"
  type: "Convolution"
  bottom: "out2_branch1_27"
  top: "res2_branch1_27"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_28"
  type: "Convolution"
  bottom: "out2_branch1_28"
  top: "res2_branch1_28"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_29"
  type: "Convolution"
  bottom: "out2_branch1_29"
  top: "res2_branch1_29"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_30"
  type: "Convolution"
  bottom: "out2_branch1_30"
  top: "res2_branch1_30"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_31"
  type: "Convolution"
  bottom: "out2_branch1_31"
  top: "res2_branch1_31"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_32"
  type: "Convolution"
  bottom: "out2_branch1_32"
  top: "res2_branch1_32"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_33"
  type: "Convolution"
  bottom: "out2_branch1_33"
  top: "res2_branch1_33"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_34"
  type: "Convolution"
  bottom: "out2_branch1_34"
  top: "res2_branch1_34"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_35"
  type: "Convolution"
  bottom: "out2_branch1_35"
  top: "res2_branch1_35"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_36"
  type: "Convolution"
  bottom: "out2_branch1_36"
  top: "res2_branch1_36"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_37"
  type: "Convolution"
  bottom: "out2_branch1_37"
  top: "res2_branch1_37"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_38"
  type: "Convolution"
  bottom: "out2_branch1_38"
  top: "res2_branch1_38"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_39"
  type: "Convolution"
  bottom: "out2_branch1_39"
  top: "res2_branch1_39"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_40"
  type: "Convolution"
  bottom: "out2_branch1_40"
  top: "res2_branch1_40"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_41"
  type: "Convolution"
  bottom: "out2_branch1_41"
  top: "res2_branch1_41"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_42"
  type: "Convolution"
  bottom: "out2_branch1_42"
  top: "res2_branch1_42"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_43"
  type: "Convolution"
  bottom: "out2_branch1_43"
  top: "res2_branch1_43"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_44"
  type: "Convolution"
  bottom: "out2_branch1_44"
  top: "res2_branch1_44"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_45"
  type: "Convolution"
  bottom: "out2_branch1_45"
  top: "res2_branch1_45"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_46"
  type: "Convolution"
  bottom: "out2_branch1_46"
  top: "res2_branch1_46"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_47"
  type: "Convolution"
  bottom: "out2_branch1_47"
  top: "res2_branch1_47"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_48"
  type: "Convolution"
  bottom: "out2_branch1_48"
  top: "res2_branch1_48"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_49"
  type: "Convolution"
  bottom: "out2_branch1_49"
  top: "res2_branch1_49"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_50"
  type: "Convolution"
  bottom: "out2_branch1_50"
  top: "res2_branch1_50"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_51"
  type: "Convolution"
  bottom: "out2_branch1_51"
  top: "res2_branch1_51"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_52"
  type: "Convolution"
  bottom: "out2_branch1_52"
  top: "res2_branch1_52"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_53"
  type: "Convolution"
  bottom: "out2_branch1_53"
  top: "res2_branch1_53"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_54"
  type: "Convolution"
  bottom: "out2_branch1_54"
  top: "res2_branch1_54"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_55"
  type: "Convolution"
  bottom: "out2_branch1_55"
  top: "res2_branch1_55"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_56"
  type: "Convolution"
  bottom: "out2_branch1_56"
  top: "res2_branch1_56"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_57"
  type: "Convolution"
  bottom: "out2_branch1_57"
  top: "res2_branch1_57"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_58"
  type: "Convolution"
  bottom: "out2_branch1_58"
  top: "res2_branch1_58"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_59"
  type: "Convolution"
  bottom: "out2_branch1_59"
  top: "res2_branch1_59"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_60"
  type: "Convolution"
  bottom: "out2_branch1_60"
  top: "res2_branch1_60"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_61"
  type: "Convolution"
  bottom: "out2_branch1_61"
  top: "res2_branch1_61"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_62"
  type: "Convolution"
  bottom: "out2_branch1_62"
  top: "res2_branch1_62"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_63"
  type: "Convolution"
  bottom: "out2_branch1_63"
  top: "res2_branch1_63"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch1_64"
  type: "Convolution"
  bottom: "out2_branch1_64"
  top: "res2_branch1_64"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  name: "conv2_branch1_combination"
  type: "Combination"
  bottom: "res2_branch1_1"
  bottom: "res2_branch1_2"
  bottom: "res2_branch1_3"
  bottom: "res2_branch1_4"
  bottom: "res2_branch1_5"
  bottom: "res2_branch1_6"
  bottom: "res2_branch1_7"
  bottom: "res2_branch1_8"
  bottom: "res2_branch1_9"
  bottom: "res2_branch1_10"
  bottom: "res2_branch1_11"
  bottom: "res2_branch1_12"
  bottom: "res2_branch1_13"
  bottom: "res2_branch1_14"
  bottom: "res2_branch1_15"
  bottom: "res2_branch1_16"
  bottom: "res2_branch1_17"
  bottom: "res2_branch1_18"
  bottom: "res2_branch1_19"
  bottom: "res2_branch1_20"
  bottom: "res2_branch1_21"
  bottom: "res2_branch1_22"
  bottom: "res2_branch1_23"
  bottom: "res2_branch1_24"
  bottom: "res2_branch1_25"
  bottom: "res2_branch1_26"
  bottom: "res2_branch1_27"
  bottom: "res2_branch1_28"
  bottom: "res2_branch1_29"
  bottom: "res2_branch1_30"
  bottom: "res2_branch1_31"
  bottom: "res2_branch1_32"
  bottom: "res2_branch1_33"
  bottom: "res2_branch1_34"
  bottom: "res2_branch1_35"
  bottom: "res2_branch1_36"
  bottom: "res2_branch1_37"
  bottom: "res2_branch1_38"
  bottom: "res2_branch1_39"
  bottom: "res2_branch1_40"
  bottom: "res2_branch1_41"
  bottom: "res2_branch1_42"
  bottom: "res2_branch1_43"
  bottom: "res2_branch1_44"
  bottom: "res2_branch1_45"
  bottom: "res2_branch1_46"
  bottom: "res2_branch1_47"
  bottom: "res2_branch1_48"
  bottom: "res2_branch1_49"
  bottom: "res2_branch1_50"
  bottom: "res2_branch1_51"
  bottom: "res2_branch1_52"
  bottom: "res2_branch1_53"
  bottom: "res2_branch1_54"
  bottom: "res2_branch1_55"
  bottom: "res2_branch1_56"
  bottom: "res2_branch1_57"
  bottom: "res2_branch1_58"
  bottom: "res2_branch1_59"
  bottom: "res2_branch1_60"
  bottom: "res2_branch1_61"
  bottom: "res2_branch1_62"
  bottom: "res2_branch1_63"
  bottom: "res2_branch1_64"
  top: "conv2_branch1_combination"
  
	  combination_param{
	  xcoord: 0
	  xcoord: 11
	  xcoord: 22
	  xcoord: 33
	  xcoord: 44
	  xcoord: 55
	  xcoord: 66
	  xcoord: 77
	  
	  
	  xcoord: 0
	  xcoord: 11
	  xcoord: 22
	  xcoord: 33
	  xcoord: 44
	  xcoord: 55
	  xcoord: 66
	  xcoord: 77


	  xcoord: 0
	  xcoord: 11
	  xcoord: 22
	  xcoord: 33
	  xcoord: 44
	  xcoord: 55
	  xcoord: 66
	  xcoord: 77


	   xcoord: 0
	  xcoord: 11
	  xcoord: 22
	  xcoord: 33
	  xcoord: 44
	  xcoord: 55
	  xcoord: 66
	  xcoord: 77
	 

	   xcoord: 0
	  xcoord: 11
	  xcoord: 22
	  xcoord: 33
	  xcoord: 44
	  xcoord: 55
	  xcoord: 66
	  xcoord: 77

	  
	  xcoord: 0
	  xcoord: 11
	  xcoord: 22
	  xcoord: 33
	  xcoord: 44
	  xcoord: 55
	  xcoord: 66
	  xcoord: 77
	 

	  xcoord: 0
	  xcoord: 11
	  xcoord: 22
	  xcoord: 33
	  xcoord: 44
	  xcoord: 55
	  xcoord: 66
	  xcoord: 77


	  xcoord: 0
	  xcoord: 11
	  xcoord: 22
	  xcoord: 33
	  xcoord: 44
	  xcoord: 55
	  xcoord: 66
	  xcoord: 77
	 


	  ycoord: 0
	  ycoord: 0
	  ycoord: 0
	  ycoord: 0
	  ycoord: 0
	  ycoord: 0
	  ycoord: 0
	  ycoord: 0

	  ycoord: 11
	  ycoord: 11
	  ycoord: 11
	  ycoord: 11
	  ycoord: 11
	  ycoord: 11
	  ycoord: 11
	  ycoord: 11

	  ycoord: 22
	  ycoord: 22
	  ycoord: 22
	  ycoord: 22
    ycoord: 22
	  ycoord: 22
	  ycoord: 22
	  ycoord: 22

	  ycoord: 33
	  ycoord: 33
	  ycoord: 33
	  ycoord: 33
	  ycoord: 33
	  ycoord: 33
	  ycoord: 33
	  ycoord: 33

	  ycoord: 44
	  ycoord: 44
	  ycoord: 44
	  ycoord: 44
	  ycoord: 44
	  ycoord: 44
	  ycoord: 44
	  ycoord: 44

	  ycoord: 55
	  ycoord: 55
	  ycoord: 55
	  ycoord: 55
	  ycoord: 55
	  ycoord: 55
	  ycoord: 55
	  ycoord: 55

	  ycoord: 66
	  ycoord: 66
	  ycoord: 66
	  ycoord: 66
	  ycoord: 66
	  ycoord: 66
	  ycoord: 66
	  ycoord: 66

	  ycoord: 77
	  ycoord: 77
	  ycoord: 77
	  ycoord: 77
	  ycoord: 77
	  ycoord: 77
	  ycoord: 77
	  ycoord: 77
  }
}

layer{
  name: "conv2_branch2_division"
  type: "Division"
  bottom: "conv2_branch1_combination"
  top: "out2_branch2_1"
  top: "out2_branch2_2"
  top: "out2_branch2_3"
  top: "out2_branch2_4"
  top: "out2_branch2_5"
  top: "out2_branch2_6"
  top: "out2_branch2_7"
  top: "out2_branch2_8"
  top: "out2_branch2_9"
  top: "out2_branch2_10"
  top: "out2_branch2_11"
  top: "out2_branch2_12"
  top: "out2_branch2_13"
  top: "out2_branch2_14"
  top: "out2_branch2_15"
  top: "out2_branch2_16"
  division_param{
  width: 22
  height: 22

  xcoord: 0
  xcoord: 22
  xcoord: 44
  xcoord: 66
  
  
  xcoord: 0
  xcoord: 22
  xcoord: 44
  xcoord: 66

  xcoord: 0
  xcoord: 22
  xcoord: 44
  xcoord: 66


  xcoord: 0
  xcoord: 22
  xcoord: 44
  xcoord: 66


  ycoord: 0
  ycoord: 0
  ycoord: 0
  ycoord: 0 


  ycoord: 22
  ycoord: 22
  ycoord: 22
  ycoord: 22


  ycoord: 44
  ycoord: 44
  ycoord: 44
  ycoord: 44


  ycoord: 66
  ycoord: 66
  ycoord: 66
  ycoord: 66
  }
}

layer {
  name: "out2_branch2_1_bn"
  type: "BatchNorm"
  bottom: "out2_branch2_1"
  top: "out2_branch2_1"
}

layer {
  name: "out2_branch2_2_bn"
  type: "BatchNorm"
  bottom: "out2_branch2_2"
  top: "out2_branch2_2"
}

layer {
  name: "out2_branch2_3_bn"
  type: "BatchNorm"
  bottom: "out2_branch2_3"
  top: "out2_branch2_3"
}

layer {
  name: "out2_branch2_4_bn"
  type: "BatchNorm"
  bottom: "out2_branch2_4"
  top: "out2_branch2_4"
}

layer {
  name: "out2_branch2_5_bn"
  type: "BatchNorm"
  bottom: "out2_branch2_5"
  top: "out2_branch2_5"
}

layer {
  name: "out2_branch2_6_bn"
  type: "BatchNorm"
  bottom: "out2_branch2_6"
  top: "out2_branch2_6"
}

layer {
  name: "out2_branch2_7_bn"
  type: "BatchNorm"
  bottom: "out2_branch2_7"
  top: "out2_branch2_7"
}

layer {
  name: "out2_branch2_8_bn"
  type: "BatchNorm"
  bottom: "out2_branch2_8"
  top: "out2_branch2_8"
}

layer {
  name: "out2_branch2_9_bn"
  type: "BatchNorm"
  bottom: "out2_branch2_9"
  top: "out2_branch2_9"
}

layer {
  name: "out2_branch2_10_bn"
  type: "BatchNorm"
  bottom: "out2_branch2_10"
  top: "out2_branch2_10"
}

layer {
  name: "out2_branch2_11_bn"
  type: "BatchNorm"
  bottom: "out2_branch2_11"
  top: "out2_branch2_11"
}

layer {
  name: "out2_branch2_12_bn"
  type: "BatchNorm"
  bottom: "out2_branch2_12"
  top: "out2_branch2_12"
}

layer {
  name: "out2_branch2_13_bn"
  type: "BatchNorm"
  bottom: "out2_branch2_13"
  top: "out2_branch2_13"
}

layer {
  name: "out2_branch2_14_bn"
  type: "BatchNorm"
  bottom: "out2_branch2_14"
  top: "out2_branch2_14"
}

layer {
  name: "out2_branch2_15_bn"
  type: "BatchNorm"
  bottom: "out2_branch2_15"
  top: "out2_branch2_15"
}

layer {
  name: "out2_branch2_16_bn"
  type: "BatchNorm"
  bottom: "out2_branch2_16"
  top: "out2_branch2_16"
}

layer {
  name: "out2_branch2_1_bn_scale"
  type: "Scale"
  bottom: "out2_branch2_1"
  top: "out2_branch2_1"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch2_2_bn_scale"
  type: "Scale"
  bottom: "out2_branch2_2"
  top: "out2_branch2_2"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch2_3_bn_scale"
  type: "Scale"
  bottom: "out2_branch2_3"
  top: "out2_branch2_3"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch2_4_bn_scale"
  type: "Scale"
  bottom: "out2_branch2_4"
  top: "out2_branch2_4"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch2_5_bn_scale"
  type: "Scale"
  bottom: "out2_branch2_5"
  top: "out2_branch2_5"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch2_6_bn_scale"
  type: "Scale"
  bottom: "out2_branch2_6"
  top: "out2_branch2_6"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch2_7_bn_scale"
  type: "Scale"
  bottom: "out2_branch2_7"
  top: "out2_branch2_7"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch2_8_bn_scale"
  type: "Scale"
  bottom: "out2_branch2_8"
  top: "out2_branch2_8"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch2_9_bn_scale"
  type: "Scale"
  bottom: "out2_branch2_9"
  top: "out2_branch2_9"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch2_10_bn_scale"
  type: "Scale"
  bottom: "out2_branch2_10"
  top: "out2_branch2_10"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch2_11_bn_scale"
  type: "Scale"
  bottom: "out2_branch2_11"
  top: "out2_branch2_11"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch2_12_bn_scale"
  type: "Scale"
  bottom: "out2_branch2_12"
  top: "out2_branch2_12"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch2_13_bn_scale"
  type: "Scale"
  bottom: "out2_branch2_13"
  top: "out2_branch2_13"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch2_14_bn_scale"
  type: "Scale"
  bottom: "out2_branch2_14"
  top: "out2_branch2_14"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch2_15_bn_scale"
  type: "Scale"
  bottom: "out2_branch2_15"
  top: "out2_branch2_15"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch2_16_bn_scale"
  type: "Scale"
  bottom: "out2_branch2_16"
  top: "out2_branch2_16"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch2_1_relu"
  type: "ReLU"
  bottom: "out2_branch2_1"
  top: "out2_branch2_1"
}

layer {
  name: "out2_branch2_2_relu"
  type: "ReLU"
  bottom: "out2_branch2_2"
  top: "out2_branch2_2"
}

layer {
  name: "out2_branch2_3_relu"
  type: "ReLU"
  bottom: "out2_branch2_3"
  top: "out2_branch2_3"
}

layer {
  name: "out2_branch2_4_relu"
  type: "ReLU"
  bottom: "out2_branch2_4"
  top: "out2_branch2_4"
}

layer {
  name: "out2_branch2_5_relu"
  type: "ReLU"
  bottom: "out2_branch2_5"
  top: "out2_branch2_5"
}

layer {
  name: "out2_branch2_6_relu"
  type: "ReLU"
  bottom: "out2_branch2_6"
  top: "out2_branch2_6"
}

layer {
  name: "out2_branch2_7_relu"
  type: "ReLU"
  bottom: "out2_branch2_7"
  top: "out2_branch2_7"
}

layer {
  name: "out2_branch2_8_relu"
  type: "ReLU"
  bottom: "out2_branch2_8"
  top: "out2_branch2_8"
}

layer {
  name: "out2_branch2_9_relu"
  type: "ReLU"
  bottom: "out2_branch2_9"
  top: "out2_branch2_9"
}

layer {
  name: "out2_branch2_10_relu"
  type: "ReLU"
  bottom: "out2_branch2_10"
  top: "out2_branch2_10"
}

layer {
  name: "out2_branch2_11_relu"
  type: "ReLU"
  bottom: "out2_branch2_11"
  top: "out2_branch2_11"
}

layer {
  name: "out2_branch2_12_relu"
  type: "ReLU"
  bottom: "out2_branch2_12"
  top: "out2_branch2_12"
}

layer {
  name: "out2_branch2_13_relu"
  type: "ReLU"
  bottom: "out2_branch2_13"
  top: "out2_branch2_13"
}

layer {
  name: "out2_branch2_14_relu"
  type: "ReLU"
  bottom: "out2_branch2_14"
  top: "out2_branch2_14"
}

layer {
  name: "out2_branch2_15_relu"
  type: "ReLU"
  bottom: "out2_branch2_15"
  top: "out2_branch2_15"
}

layer {
  name: "out2_branch2_16_relu"
  type: "ReLU"
  bottom: "out2_branch2_16"
  top: "out2_branch2_16"
}

layer {
  name: "res2_branch2_1"
  type: "Convolution"
  bottom: "out2_branch2_1"
  top: "res2_branch2_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch2_2"
  type: "Convolution"
  bottom: "out2_branch2_2"
  top: "res2_branch2_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch2_3"
  type: "Convolution"
  bottom: "out2_branch2_3"
  top: "res2_branch2_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch2_4"
  type: "Convolution"
  bottom: "out2_branch2_4"
  top: "res2_branch2_4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch2_5"
  type: "Convolution"
  bottom: "out2_branch2_5"
  top: "res2_branch2_5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch2_6"
  type: "Convolution"
  bottom: "out2_branch2_6"
  top: "res2_branch2_6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch2_7"
  type: "Convolution"
  bottom: "out2_branch2_7"
  top: "res2_branch2_7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch2_8"
  type: "Convolution"
  bottom: "out2_branch2_8"
  top: "res2_branch2_8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch2_9"
  type: "Convolution"
  bottom: "out2_branch2_9"
  top: "res2_branch2_9"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch2_10"
  type: "Convolution"
  bottom: "out2_branch2_10"
  top: "res2_branch2_10"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch2_11"
  type: "Convolution"
  bottom: "out2_branch2_11"
  top: "res2_branch2_11"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch2_12"
  type: "Convolution"
  bottom: "out2_branch2_12"
  top: "res2_branch2_12"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch2_13"
  type: "Convolution"
  bottom: "out2_branch2_13"
  top: "res2_branch2_13"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch2_14"
  type: "Convolution"
  bottom: "out2_branch2_14"
  top: "res2_branch2_14"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch2_15"
  type: "Convolution"
  bottom: "out2_branch2_15"
  top: "res2_branch2_15"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch2_16"
  type: "Convolution"
  bottom: "out2_branch2_16"
  top: "res2_branch2_16"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}


layer{
  name: "conv2_branch2_combination"
  type: "Combination"
  bottom: "res2_branch2_1"
  bottom: "res2_branch2_2"
  bottom: "res2_branch2_3"
  bottom: "res2_branch2_4"
  bottom: "res2_branch2_5"
  bottom: "res2_branch2_6"
  bottom: "res2_branch2_7"
  bottom: "res2_branch2_8"
  bottom: "res2_branch2_9"
  bottom: "res2_branch2_10"
  bottom: "res2_branch2_11"
  bottom: "res2_branch2_12"
  bottom: "res2_branch2_13"
  bottom: "res2_branch2_14"
  bottom: "res2_branch2_15"
  bottom: "res2_branch2_16"
  top: "conv2_branch2_combination"
  
  combination_param{
  xcoord: 0
  xcoord: 22
  xcoord: 44
  xcoord: 66
  
  
  xcoord: 0
  xcoord: 22
  xcoord: 44
  xcoord: 66

  xcoord: 0
  xcoord: 22
  xcoord: 44
  xcoord: 66


  xcoord: 0
  xcoord: 22
  xcoord: 44
  xcoord: 66


  ycoord: 0
  ycoord: 0
  ycoord: 0
  ycoord: 0 


  ycoord: 22
  ycoord: 22
  ycoord: 22
  ycoord: 22


  ycoord: 44
  ycoord: 44
  ycoord: 44
  ycoord: 44


  ycoord: 66
  ycoord: 66
  ycoord: 66
  ycoord: 66
  }
}

layer{
  name: "conv2_branch3_division"
  type: "Division"
  bottom: "conv2_branch2_combination"
  top: "out2_branch3_1"
  top: "out2_branch3_2"
  top: "out2_branch3_3"
  top: "out2_branch3_4"
  division_param{
  width: 44
  height: 44

  xcoord: 0
  xcoord: 44
  
  xcoord: 0
  xcoord: 44
 
  ycoord: 0
  ycoord: 0

  ycoord: 44
  ycoord: 44
  }
}

layer {
  name: "out2_branch3_1_bn"
  type: "BatchNorm"
  bottom: "out2_branch3_1"
  top: "out2_branch3_1"
}

layer {
  name: "out2_branch3_2_bn"
  type: "BatchNorm"
  bottom: "out2_branch3_2"
  top: "out2_branch3_2"
}

layer {
  name: "out2_branch3_3_bn"
  type: "BatchNorm"
  bottom: "out2_branch3_3"
  top: "out2_branch3_3"
}

layer {
  name: "out2_branch3_4_bn"
  type: "BatchNorm"
  bottom: "out2_branch3_4"
  top: "out2_branch3_4"
}


layer {
  name: "out2_branch3_1_bn_scale"
  type: "Scale"
  bottom: "out2_branch3_1"
  top: "out2_branch3_1"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch3_2_bn_scale"
  type: "Scale"
  bottom: "out2_branch3_2"
  top: "out2_branch3_2"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch3_3_bn_scale"
  type: "Scale"
  bottom: "out2_branch3_3"
  top: "out2_branch3_3"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "out2_branch3_4_bn_scale"
  type: "Scale"
  bottom: "out2_branch3_4"
  top: "out2_branch3_4"
  scale_param {
  	bias_term: true
  }
}


layer {
  name: "out2_branch3_1_relu"
  type: "ReLU"
  bottom: "out2_branch3_1"
  top: "out2_branch3_1"
}

layer {
  name: "out2_branch3_2_relu"
  type: "ReLU"
  bottom: "out2_branch3_2"
  top: "out2_branch3_2"
}

layer {
  name: "out2_branch3_3_relu"
  type: "ReLU"
  bottom: "out2_branch3_3"
  top: "out2_branch3_3"
}

layer {
  name: "out2_branch3_4_relu"
  type: "ReLU"
  bottom: "out2_branch3_4"
  top: "out2_branch3_4"
}


layer {
  name: "res2_branch3_1"
  type: "Convolution"
  bottom: "out2_branch3_1"
  top: "res2_branch3_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch3_2"
  type: "Convolution"
  bottom: "out2_branch3_2"
  top: "res2_branch3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch3_3"
  type: "Convolution"
  bottom: "out2_branch3_3"
  top: "res2_branch3_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "res2_branch3_4"
  type: "Convolution"
  bottom: "out2_branch3_4"
  top: "res2_branch3_4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}


layer{
  name: "conv2_branch3_combination"
  type: "Combination"
  bottom: "res2_branch3_1"
  bottom: "res2_branch3_2"
  bottom: "res2_branch3_3"
  bottom: "res2_branch3_4"
  top: "conv2_branch3_combination"
  
  combination_param{
  xcoord: 0
  xcoord: 44
  
  xcoord: 0
  xcoord: 44
 
  ycoord: 0
  ycoord: 0

  ycoord: 44
  ycoord: 44
  }
}

layer {
  name: "conv2_combination"
  bottom: "conv2_branch1_combination"
  bottom: "conv2_branch2_combination"
  bottom: "conv2_branch3_combination"
  top: "conv2_combination"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

layer{
  type: "Eltwise"
  name: "conv2_add"
  bottom: "conv2"
  bottom: "conv2_combination"
	top: "conv2_add"
	eltwise_param { 
		operation: SUM 
	}
}

layer {
  name: "conv2_add_bn"
  type: "BatchNorm"
  bottom: "conv2_add"
  top: "conv2_add"
}

layer {
  name: "conv2_add_bn_scale"
  type: "Scale"
  bottom: "conv2_add"
  top: "conv2_add"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "conv2_add_relu"
  type: "ReLU"
  bottom: "conv2_add"
  top: "conv2_add"
}

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_add"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  type: "DummyData"
  name: "au_spatial_attention_1"
  top: "au_spatial_attention_1"
  dummy_data_param {
    shape: { dim: 8 dim: 1 dim: 44 dim: 44 }
    data_filler: {
    	type: "constant"
    	value: 0
    }
  }
  include: { phase: TRAIN }
}

layer {
  name: "au1_conv31"
  type: "Convolution"
  bottom: "pool2"
  top: "au1_conv31"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au1_conv31_bn"
  type: "BatchNorm"
  bottom: "au1_conv31"
  top: "au1_conv31"
}

layer {
  name: "au1_conv31_bn_scale"
  type: "Scale"
  bottom: "au1_conv31"
  top: "au1_conv31"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au1_conv31_relu"
  type: "ReLU"
  bottom: "au1_conv31"
  top: "au1_conv31"
}

layer {
  name: "au1_conv31_pool"
  type: "Pooling"
  bottom: "au1_conv31"
  top: "au1_conv31_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au1_channel_attention"
  type: "InnerProduct"
  bottom: "au1_conv31_pool"
  top: "au1_channel_attention"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au1_channel_attention_sigmoid"
  bottom: "au1_channel_attention"
  top: "au1_channel_attention_sigmoid"
  type: "Sigmoid"
}

layer {
  name: "au1_channel_attention_sigmoid_reshape"
  type: "Reshape"
  bottom: "au1_channel_attention_sigmoid"
  top: "au1_channel_attention_sigmoid_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 1
      dim: 1
    }
  }
}

layer {
  name: "au1_channel_attention_tile"
  type: "Tile"
  bottom: "au1_channel_attention_sigmoid_reshape"
  top: "au1_channel_attention_tile"
  tile_param {
    axis: 2
    tiles: 1936
  }
}

layer {
  name: "au1_channel_attention_tile_reshape"
  type: "Reshape"
  bottom: "au1_channel_attention_tile"
  top: "au1_channel_attention_tile_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 44
      dim: -1
    }
  }
}

layer {
  name: "au1_conv32"
  type: "Convolution"
  bottom: "au1_conv31"
  top: "au1_conv32"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au1_conv32_channel_reweight"
  bottom: "au1_conv32"
  bottom: "au1_channel_attention_tile_reshape"
	top: "au1_conv32_channel_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au1_conv32_channel_reweight_bn"
  type: "BatchNorm"
  bottom: "au1_conv32_channel_reweight"
  top: "au1_conv32_channel_reweight"
}

layer {
  name: "au1_conv32_channel_reweight_bn_scale"
  type: "Scale"
  bottom: "au1_conv32_channel_reweight"
  top: "au1_conv32_channel_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au1_conv32_channel_reweight_relu"
  type: "ReLU"
  bottom: "au1_conv32_channel_reweight"
  top: "au1_conv32_channel_reweight"
}

layer {
  name: "au1_conv32_new"
  type: "Convolution"
  bottom: "au1_conv32_channel_reweight"
  top: "au1_conv32_new"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au1_conv32_new_bn"
  type: "BatchNorm"
  bottom: "au1_conv32_new"
  top: "au1_conv32_new"
}

layer {
  name: "au1_conv32_new_bn_scale"
  type: "Scale"
  bottom: "au1_conv32_new"
  top: "au1_conv32_new"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au1_conv32_new_relu"
  type: "ReLU"
  bottom: "au1_conv32_new"
  top: "au1_conv32_new"
}

layer {
  name: "au1_conv33"
  type: "Convolution"
  bottom: "au1_conv32_new"
  top: "au1_conv33"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au1_conv33_bn"
  type: "BatchNorm"
  bottom: "au1_conv33"
  top: "au1_conv33"
}

layer {
  name: "au1_conv33_bn_scale"
  type: "Scale"
  bottom: "au1_conv33"
  top: "au1_conv33"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au1_conv33_relu"
  type: "TanH"
  bottom: "au1_conv33"
  top: "au1_conv33"
}

layer {
  name: "au1_spatial_attention"
  type: "Convolution"
  bottom: "au1_conv33"
  top: "au1_spatial_attention"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au1_spatial_attention_0"
  bottom: "au1_spatial_attention"
  top: "au1_spatial_attention_0"
  type: "Power"
  power_param {
    power: 1
    scale: -1
    shift: 0
  }
}

layer {
  name: "au1_spatial_attention_concat"
  bottom: "au1_spatial_attention_0"
  bottom: "au_spatial_attention_1"     
  top: "au1_spatial_attention_concat"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

layer { 
	type: "Split" 
	name: "splitting"
  bottom: "au1_spatial_attention_concat" 
  top: "au1_spatial_attention_unary" 
  top: "au1_spatial_attention_Q0"
}

layer {
  name: "au1_spatial_attention_pred"
  type: "MultiStageMeanfieldAU3"
  bottom: "au1_spatial_attention_unary"
  bottom: "au1_spatial_attention_Q0"
  bottom: "au1_conv33"
  top: "au1_spatial_attention_pred"
  param {
    lr_mult: 0.01#learning rate for W_G
  }
  param {
  lr_mult: 0.01#learning rate for W_B
  }
  param {
  lr_mult: 0.001 #learning rate for compatiblity transform matrix
  }
  multi_stage_meanfield_au3_param {
   num_iterations: 5
   compatibility_mode: POTTS#Initialize the compatilibity transform matrix with a matrix whose diagonal is -1.
   threshold: 2
   theta_alpha: 160
   theta_beta: 3
   theta_gamma: 3
   spatial_filter_weight: 3
   bilateral_filter_weight: 5
  }
}

layer {
  name: "au1_spatial_attention_prob"
  type: "Softmax"
  bottom: "au1_spatial_attention_pred"
  top: "au1_spatial_attention_prob"
}

layer {
  name: "au1_spatial_attention_prob_slice"
  type: "Slice"
  bottom: "au1_spatial_attention_prob"
  top: "au1_spatial_attention_probNAT"
  top: "au1_spatial_attention_probAT"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

layer {
  name: "au1_spatial_attention_probNAT_silence"
  type: "Silence"
  bottom: "au1_spatial_attention_probNAT"
}

layer {
  name: "au1_spatial_attention_tile"
  type: "Tile"
  bottom: "au1_spatial_attention_probAT"
  top: "au1_spatial_attention_tile"
  tile_param {
    axis: 1
    tiles: 64
  }
}

layer {
  name: "au1_conv34"
  type: "Convolution"
  bottom: "au1_conv32_new"
  top: "au1_conv34"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au1_conv34_spatial_reweight"
  bottom:"au1_conv34"
  bottom:"au1_spatial_attention_tile"
	top:"au1_conv34_spatial_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au1_conv34_spatial_reweight_bn"
  type: "BatchNorm"
  bottom: "au1_conv34_spatial_reweight"
  top: "au1_conv34_spatial_reweight"
}

layer {
  name: "au1_conv34_spatial_reweight_bn_scale"
  type: "Scale"
  bottom: "au1_conv34_spatial_reweight"
  top: "au1_conv34_spatial_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au1_conv34_spatial_reweight_relu"
  type: "ReLU"
  bottom: "au1_conv34_spatial_reweight"
  top: "au1_conv34_spatial_reweight"
}

layer {
  name: "au1_conv35"
  type: "Convolution"
  bottom: "au1_conv34_spatial_reweight"
  top: "au1_conv35"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au1_conv35_pool"
  type: "Pooling"
  bottom: "au1_conv35"
  top: "au1_conv35_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au1_fc"
  type: "InnerProduct"
  bottom: "au1_conv35_pool"
  top: "au1_fc"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au2_conv31"
  type: "Convolution"
  bottom: "pool2"
  top: "au2_conv31"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au2_conv31_bn"
  type: "BatchNorm"
  bottom: "au2_conv31"
  top: "au2_conv31"
}

layer {
  name: "au2_conv31_bn_scale"
  type: "Scale"
  bottom: "au2_conv31"
  top: "au2_conv31"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au2_conv31_relu"
  type: "ReLU"
  bottom: "au2_conv31"
  top: "au2_conv31"
}

layer {
  name: "au2_conv31_pool"
  type: "Pooling"
  bottom: "au2_conv31"
  top: "au2_conv31_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au2_channel_attention"
  type: "InnerProduct"
  bottom: "au2_conv31_pool"
  top: "au2_channel_attention"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au2_channel_attention_sigmoid"
  bottom: "au2_channel_attention"
  top: "au2_channel_attention_sigmoid"
  type: "Sigmoid"
}

layer {
  name: "au2_channel_attention_sigmoid_reshape"
  type: "Reshape"
  bottom: "au2_channel_attention_sigmoid"
  top: "au2_channel_attention_sigmoid_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 1
      dim: 1
    }
  }
}

layer {
  name: "au2_channel_attention_tile"
  type: "Tile"
  bottom: "au2_channel_attention_sigmoid_reshape"
  top: "au2_channel_attention_tile"
  tile_param {
    axis: 2
    tiles: 1936
  }
}

layer {
  name: "au2_channel_attention_tile_reshape"
  type: "Reshape"
  bottom: "au2_channel_attention_tile"
  top: "au2_channel_attention_tile_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 44
      dim: -1
    }
  }
}

layer {
  name: "au2_conv32"
  type: "Convolution"
  bottom: "au2_conv31"
  top: "au2_conv32"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au2_conv32_channel_reweight"
  bottom: "au2_conv32"
  bottom: "au2_channel_attention_tile_reshape"
	top: "au2_conv32_channel_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au2_conv32_channel_reweight_bn"
  type: "BatchNorm"
  bottom: "au2_conv32_channel_reweight"
  top: "au2_conv32_channel_reweight"
}

layer {
  name: "au2_conv32_channel_reweight_bn_scale"
  type: "Scale"
  bottom: "au2_conv32_channel_reweight"
  top: "au2_conv32_channel_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au2_conv32_channel_reweight_relu"
  type: "ReLU"
  bottom: "au2_conv32_channel_reweight"
  top: "au2_conv32_channel_reweight"
}

layer {
  name: "au2_conv32_new"
  type: "Convolution"
  bottom: "au2_conv32_channel_reweight"
  top: "au2_conv32_new"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au2_conv32_new_bn"
  type: "BatchNorm"
  bottom: "au2_conv32_new"
  top: "au2_conv32_new"
}

layer {
  name: "au2_conv32_new_bn_scale"
  type: "Scale"
  bottom: "au2_conv32_new"
  top: "au2_conv32_new"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au2_conv32_new_relu"
  type: "ReLU"
  bottom: "au2_conv32_new"
  top: "au2_conv32_new"
}

layer {
  name: "au2_conv33"
  type: "Convolution"
  bottom: "au2_conv32_new"
  top: "au2_conv33"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au2_conv33_bn"
  type: "BatchNorm"
  bottom: "au2_conv33"
  top: "au2_conv33"
}

layer {
  name: "au2_conv33_bn_scale"
  type: "Scale"
  bottom: "au2_conv33"
  top: "au2_conv33"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au2_conv33_relu"
  type: "TanH"
  bottom: "au2_conv33"
  top: "au2_conv33"
}

layer {
  name: "au2_spatial_attention"
  type: "Convolution"
  bottom: "au2_conv33"
  top: "au2_spatial_attention"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au2_spatial_attention_0"
  bottom: "au2_spatial_attention"
  top: "au2_spatial_attention_0"
  type: "Power"
  power_param {
    power: 1
    scale: -1
    shift: 0
  }
}

layer {
  name: "au2_spatial_attention_concat"
  bottom: "au2_spatial_attention_0"
  bottom: "au_spatial_attention_1"     
  top: "au2_spatial_attention_concat"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

layer { 
	type: "Split" 
	name: "splitting"
  bottom: "au2_spatial_attention_concat" 
  top: "au2_spatial_attention_unary" 
  top: "au2_spatial_attention_Q0"
}

layer {
  name: "au2_spatial_attention_pred"
  type: "MultiStageMeanfieldAU3"
  bottom: "au2_spatial_attention_unary"
  bottom: "au2_spatial_attention_Q0"
  bottom: "au2_conv33"
  top: "au2_spatial_attention_pred"
  param {
    lr_mult: 0.01#learning rate for W_G
  }
  param {
  lr_mult: 0.01#learning rate for W_B
  }
  param {
  lr_mult: 0.001 #learning rate for compatiblity transform matrix
  }
  multi_stage_meanfield_au3_param {
   num_iterations: 5
   compatibility_mode: POTTS#Initialize the compatilibity transform matrix with a matrix whose diagonal is -1.
   threshold: 2
   theta_alpha: 160
   theta_beta: 3
   theta_gamma: 3
   spatial_filter_weight: 3
   bilateral_filter_weight: 5
  }
}

layer {
  name: "au2_spatial_attention_prob"
  type: "Softmax"
  bottom: "au2_spatial_attention_pred"
  top: "au2_spatial_attention_prob"
}

layer {
  name: "au2_spatial_attention_prob_slice"
  type: "Slice"
  bottom: "au2_spatial_attention_prob"
  top: "au2_spatial_attention_probNAT"
  top: "au2_spatial_attention_probAT"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

layer {
  name: "au2_spatial_attention_probNAT_silence"
  type: "Silence"
  bottom: "au2_spatial_attention_probNAT"
}

layer {
  name: "au2_spatial_attention_tile"
  type: "Tile"
  bottom: "au2_spatial_attention_probAT"
  top: "au2_spatial_attention_tile"
  tile_param {
    axis: 1
    tiles: 64
  }
}

layer {
  name: "au2_conv34"
  type: "Convolution"
  bottom: "au2_conv32_new"
  top: "au2_conv34"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au2_conv34_spatial_reweight"
  bottom:"au2_conv34"
  bottom:"au2_spatial_attention_tile"
	top:"au2_conv34_spatial_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au2_conv34_spatial_reweight_bn"
  type: "BatchNorm"
  bottom: "au2_conv34_spatial_reweight"
  top: "au2_conv34_spatial_reweight"
}

layer {
  name: "au2_conv34_spatial_reweight_bn_scale"
  type: "Scale"
  bottom: "au2_conv34_spatial_reweight"
  top: "au2_conv34_spatial_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au2_conv34_spatial_reweight_relu"
  type: "ReLU"
  bottom: "au2_conv34_spatial_reweight"
  top: "au2_conv34_spatial_reweight"
}

layer {
  name: "au2_conv35"
  type: "Convolution"
  bottom: "au2_conv34_spatial_reweight"
  top: "au2_conv35"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au2_conv35_pool"
  type: "Pooling"
  bottom: "au2_conv35"
  top: "au2_conv35_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au2_fc"
  type: "InnerProduct"
  bottom: "au2_conv35_pool"
  top: "au2_fc"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au3_conv31"
  type: "Convolution"
  bottom: "pool2"
  top: "au3_conv31"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au3_conv31_bn"
  type: "BatchNorm"
  bottom: "au3_conv31"
  top: "au3_conv31"
}

layer {
  name: "au3_conv31_bn_scale"
  type: "Scale"
  bottom: "au3_conv31"
  top: "au3_conv31"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au3_conv31_relu"
  type: "ReLU"
  bottom: "au3_conv31"
  top: "au3_conv31"
}

layer {
  name: "au3_conv31_pool"
  type: "Pooling"
  bottom: "au3_conv31"
  top: "au3_conv31_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au3_channel_attention"
  type: "InnerProduct"
  bottom: "au3_conv31_pool"
  top: "au3_channel_attention"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au3_channel_attention_sigmoid"
  bottom: "au3_channel_attention"
  top: "au3_channel_attention_sigmoid"
  type: "Sigmoid"
}

layer {
  name: "au3_channel_attention_sigmoid_reshape"
  type: "Reshape"
  bottom: "au3_channel_attention_sigmoid"
  top: "au3_channel_attention_sigmoid_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 1
      dim: 1
    }
  }
}

layer {
  name: "au3_channel_attention_tile"
  type: "Tile"
  bottom: "au3_channel_attention_sigmoid_reshape"
  top: "au3_channel_attention_tile"
  tile_param {
    axis: 2
    tiles: 1936
  }
}

layer {
  name: "au3_channel_attention_tile_reshape"
  type: "Reshape"
  bottom: "au3_channel_attention_tile"
  top: "au3_channel_attention_tile_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 44
      dim: -1
    }
  }
}

layer {
  name: "au3_conv32"
  type: "Convolution"
  bottom: "au3_conv31"
  top: "au3_conv32"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au3_conv32_channel_reweight"
  bottom: "au3_conv32"
  bottom: "au3_channel_attention_tile_reshape"
	top: "au3_conv32_channel_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au3_conv32_channel_reweight_bn"
  type: "BatchNorm"
  bottom: "au3_conv32_channel_reweight"
  top: "au3_conv32_channel_reweight"
}

layer {
  name: "au3_conv32_channel_reweight_bn_scale"
  type: "Scale"
  bottom: "au3_conv32_channel_reweight"
  top: "au3_conv32_channel_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au3_conv32_channel_reweight_relu"
  type: "ReLU"
  bottom: "au3_conv32_channel_reweight"
  top: "au3_conv32_channel_reweight"
}

layer {
  name: "au3_conv32_new"
  type: "Convolution"
  bottom: "au3_conv32_channel_reweight"
  top: "au3_conv32_new"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au3_conv32_new_bn"
  type: "BatchNorm"
  bottom: "au3_conv32_new"
  top: "au3_conv32_new"
}

layer {
  name: "au3_conv32_new_bn_scale"
  type: "Scale"
  bottom: "au3_conv32_new"
  top: "au3_conv32_new"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au3_conv32_new_relu"
  type: "ReLU"
  bottom: "au3_conv32_new"
  top: "au3_conv32_new"
}

layer {
  name: "au3_conv33"
  type: "Convolution"
  bottom: "au3_conv32_new"
  top: "au3_conv33"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au3_conv33_bn"
  type: "BatchNorm"
  bottom: "au3_conv33"
  top: "au3_conv33"
}

layer {
  name: "au3_conv33_bn_scale"
  type: "Scale"
  bottom: "au3_conv33"
  top: "au3_conv33"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au3_conv33_relu"
  type: "TanH"
  bottom: "au3_conv33"
  top: "au3_conv33"
}

layer {
  name: "au3_spatial_attention"
  type: "Convolution"
  bottom: "au3_conv33"
  top: "au3_spatial_attention"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au3_spatial_attention_0"
  bottom: "au3_spatial_attention"
  top: "au3_spatial_attention_0"
  type: "Power"
  power_param {
    power: 1
    scale: -1
    shift: 0
  }
}

layer {
  name: "au3_spatial_attention_concat"
  bottom: "au3_spatial_attention_0"
  bottom: "au_spatial_attention_1"     
  top: "au3_spatial_attention_concat"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

layer { 
	type: "Split" 
	name: "splitting"
  bottom: "au3_spatial_attention_concat" 
  top: "au3_spatial_attention_unary" 
  top: "au3_spatial_attention_Q0"
}

layer {
  name: "au3_spatial_attention_pred"
  type: "MultiStageMeanfieldAU3"
  bottom: "au3_spatial_attention_unary"
  bottom: "au3_spatial_attention_Q0"
  bottom: "au3_conv33"
  top: "au3_spatial_attention_pred"
  param {
    lr_mult: 0.01#learning rate for W_G
  }
  param {
  lr_mult: 0.01#learning rate for W_B
  }
  param {
  lr_mult: 0.001 #learning rate for compatiblity transform matrix
  }
  multi_stage_meanfield_au3_param {
   num_iterations: 5
   compatibility_mode: POTTS#Initialize the compatilibity transform matrix with a matrix whose diagonal is -1.
   threshold: 2
   theta_alpha: 160
   theta_beta: 3
   theta_gamma: 3
   spatial_filter_weight: 3
   bilateral_filter_weight: 5
  }
}

layer {
  name: "au3_spatial_attention_prob"
  type: "Softmax"
  bottom: "au3_spatial_attention_pred"
  top: "au3_spatial_attention_prob"
}

layer {
  name: "au3_spatial_attention_prob_slice"
  type: "Slice"
  bottom: "au3_spatial_attention_prob"
  top: "au3_spatial_attention_probNAT"
  top: "au3_spatial_attention_probAT"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

layer {
  name: "au3_spatial_attention_probNAT_silence"
  type: "Silence"
  bottom: "au3_spatial_attention_probNAT"
}

layer {
  name: "au3_spatial_attention_tile"
  type: "Tile"
  bottom: "au3_spatial_attention_probAT"
  top: "au3_spatial_attention_tile"
  tile_param {
    axis: 1
    tiles: 64
  }
}

layer {
  name: "au3_conv34"
  type: "Convolution"
  bottom: "au3_conv32_new"
  top: "au3_conv34"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au3_conv34_spatial_reweight"
  bottom:"au3_conv34"
  bottom:"au3_spatial_attention_tile"
	top:"au3_conv34_spatial_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au3_conv34_spatial_reweight_bn"
  type: "BatchNorm"
  bottom: "au3_conv34_spatial_reweight"
  top: "au3_conv34_spatial_reweight"
}

layer {
  name: "au3_conv34_spatial_reweight_bn_scale"
  type: "Scale"
  bottom: "au3_conv34_spatial_reweight"
  top: "au3_conv34_spatial_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au3_conv34_spatial_reweight_relu"
  type: "ReLU"
  bottom: "au3_conv34_spatial_reweight"
  top: "au3_conv34_spatial_reweight"
}

layer {
  name: "au3_conv35"
  type: "Convolution"
  bottom: "au3_conv34_spatial_reweight"
  top: "au3_conv35"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au3_conv35_pool"
  type: "Pooling"
  bottom: "au3_conv35"
  top: "au3_conv35_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au3_fc"
  type: "InnerProduct"
  bottom: "au3_conv35_pool"
  top: "au3_fc"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au4_conv31"
  type: "Convolution"
  bottom: "pool2"
  top: "au4_conv31"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au4_conv31_bn"
  type: "BatchNorm"
  bottom: "au4_conv31"
  top: "au4_conv31"
}

layer {
  name: "au4_conv31_bn_scale"
  type: "Scale"
  bottom: "au4_conv31"
  top: "au4_conv31"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au4_conv31_relu"
  type: "ReLU"
  bottom: "au4_conv31"
  top: "au4_conv31"
}

layer {
  name: "au4_conv31_pool"
  type: "Pooling"
  bottom: "au4_conv31"
  top: "au4_conv31_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au4_channel_attention"
  type: "InnerProduct"
  bottom: "au4_conv31_pool"
  top: "au4_channel_attention"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au4_channel_attention_sigmoid"
  bottom: "au4_channel_attention"
  top: "au4_channel_attention_sigmoid"
  type: "Sigmoid"
}

layer {
  name: "au4_channel_attention_sigmoid_reshape"
  type: "Reshape"
  bottom: "au4_channel_attention_sigmoid"
  top: "au4_channel_attention_sigmoid_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 1
      dim: 1
    }
  }
}

layer {
  name: "au4_channel_attention_tile"
  type: "Tile"
  bottom: "au4_channel_attention_sigmoid_reshape"
  top: "au4_channel_attention_tile"
  tile_param {
    axis: 2
    tiles: 1936
  }
}

layer {
  name: "au4_channel_attention_tile_reshape"
  type: "Reshape"
  bottom: "au4_channel_attention_tile"
  top: "au4_channel_attention_tile_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 44
      dim: -1
    }
  }
}

layer {
  name: "au4_conv32"
  type: "Convolution"
  bottom: "au4_conv31"
  top: "au4_conv32"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au4_conv32_channel_reweight"
  bottom: "au4_conv32"
  bottom: "au4_channel_attention_tile_reshape"
	top: "au4_conv32_channel_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au4_conv32_channel_reweight_bn"
  type: "BatchNorm"
  bottom: "au4_conv32_channel_reweight"
  top: "au4_conv32_channel_reweight"
}

layer {
  name: "au4_conv32_channel_reweight_bn_scale"
  type: "Scale"
  bottom: "au4_conv32_channel_reweight"
  top: "au4_conv32_channel_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au4_conv32_channel_reweight_relu"
  type: "ReLU"
  bottom: "au4_conv32_channel_reweight"
  top: "au4_conv32_channel_reweight"
}

layer {
  name: "au4_conv32_new"
  type: "Convolution"
  bottom: "au4_conv32_channel_reweight"
  top: "au4_conv32_new"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au4_conv32_new_bn"
  type: "BatchNorm"
  bottom: "au4_conv32_new"
  top: "au4_conv32_new"
}

layer {
  name: "au4_conv32_new_bn_scale"
  type: "Scale"
  bottom: "au4_conv32_new"
  top: "au4_conv32_new"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au4_conv32_new_relu"
  type: "ReLU"
  bottom: "au4_conv32_new"
  top: "au4_conv32_new"
}

layer {
  name: "au4_conv33"
  type: "Convolution"
  bottom: "au4_conv32_new"
  top: "au4_conv33"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au4_conv33_bn"
  type: "BatchNorm"
  bottom: "au4_conv33"
  top: "au4_conv33"
}

layer {
  name: "au4_conv33_bn_scale"
  type: "Scale"
  bottom: "au4_conv33"
  top: "au4_conv33"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au4_conv33_relu"
  type: "TanH"
  bottom: "au4_conv33"
  top: "au4_conv33"
}

layer {
  name: "au4_spatial_attention"
  type: "Convolution"
  bottom: "au4_conv33"
  top: "au4_spatial_attention"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au4_spatial_attention_0"
  bottom: "au4_spatial_attention"
  top: "au4_spatial_attention_0"
  type: "Power"
  power_param {
    power: 1
    scale: -1
    shift: 0
  }
}

layer {
  name: "au4_spatial_attention_concat"
  bottom: "au4_spatial_attention_0"
  bottom: "au_spatial_attention_1"     
  top: "au4_spatial_attention_concat"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

layer { 
	type: "Split" 
	name: "splitting"
  bottom: "au4_spatial_attention_concat" 
  top: "au4_spatial_attention_unary" 
  top: "au4_spatial_attention_Q0"
}

layer {
  name: "au4_spatial_attention_pred"
  type: "MultiStageMeanfieldAU3"
  bottom: "au4_spatial_attention_unary"
  bottom: "au4_spatial_attention_Q0"
  bottom: "au4_conv33"
  top: "au4_spatial_attention_pred"
  param {
    lr_mult: 0.01#learning rate for W_G
  }
  param {
  lr_mult: 0.01#learning rate for W_B
  }
  param {
  lr_mult: 0.001 #learning rate for compatiblity transform matrix
  }
  multi_stage_meanfield_au3_param {
   num_iterations: 5
   compatibility_mode: POTTS#Initialize the compatilibity transform matrix with a matrix whose diagonal is -1.
   threshold: 2
   theta_alpha: 160
   theta_beta: 3
   theta_gamma: 3
   spatial_filter_weight: 3
   bilateral_filter_weight: 5
  }
}

layer {
  name: "au4_spatial_attention_prob"
  type: "Softmax"
  bottom: "au4_spatial_attention_pred"
  top: "au4_spatial_attention_prob"
}

layer {
  name: "au4_spatial_attention_prob_slice"
  type: "Slice"
  bottom: "au4_spatial_attention_prob"
  top: "au4_spatial_attention_probNAT"
  top: "au4_spatial_attention_probAT"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

layer {
  name: "au4_spatial_attention_probNAT_silence"
  type: "Silence"
  bottom: "au4_spatial_attention_probNAT"
}

layer {
  name: "au4_spatial_attention_tile"
  type: "Tile"
  bottom: "au4_spatial_attention_probAT"
  top: "au4_spatial_attention_tile"
  tile_param {
    axis: 1
    tiles: 64
  }
}

layer {
  name: "au4_conv34"
  type: "Convolution"
  bottom: "au4_conv32_new"
  top: "au4_conv34"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au4_conv34_spatial_reweight"
  bottom:"au4_conv34"
  bottom:"au4_spatial_attention_tile"
	top:"au4_conv34_spatial_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au4_conv34_spatial_reweight_bn"
  type: "BatchNorm"
  bottom: "au4_conv34_spatial_reweight"
  top: "au4_conv34_spatial_reweight"
}

layer {
  name: "au4_conv34_spatial_reweight_bn_scale"
  type: "Scale"
  bottom: "au4_conv34_spatial_reweight"
  top: "au4_conv34_spatial_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au4_conv34_spatial_reweight_relu"
  type: "ReLU"
  bottom: "au4_conv34_spatial_reweight"
  top: "au4_conv34_spatial_reweight"
}

layer {
  name: "au4_conv35"
  type: "Convolution"
  bottom: "au4_conv34_spatial_reweight"
  top: "au4_conv35"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au4_conv35_pool"
  type: "Pooling"
  bottom: "au4_conv35"
  top: "au4_conv35_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au4_fc"
  type: "InnerProduct"
  bottom: "au4_conv35_pool"
  top: "au4_fc"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au5_conv31"
  type: "Convolution"
  bottom: "pool2"
  top: "au5_conv31"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au5_conv31_bn"
  type: "BatchNorm"
  bottom: "au5_conv31"
  top: "au5_conv31"
}

layer {
  name: "au5_conv31_bn_scale"
  type: "Scale"
  bottom: "au5_conv31"
  top: "au5_conv31"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au5_conv31_relu"
  type: "ReLU"
  bottom: "au5_conv31"
  top: "au5_conv31"
}

layer {
  name: "au5_conv31_pool"
  type: "Pooling"
  bottom: "au5_conv31"
  top: "au5_conv31_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au5_channel_attention"
  type: "InnerProduct"
  bottom: "au5_conv31_pool"
  top: "au5_channel_attention"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au5_channel_attention_sigmoid"
  bottom: "au5_channel_attention"
  top: "au5_channel_attention_sigmoid"
  type: "Sigmoid"
}

layer {
  name: "au5_channel_attention_sigmoid_reshape"
  type: "Reshape"
  bottom: "au5_channel_attention_sigmoid"
  top: "au5_channel_attention_sigmoid_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 1
      dim: 1
    }
  }
}

layer {
  name: "au5_channel_attention_tile"
  type: "Tile"
  bottom: "au5_channel_attention_sigmoid_reshape"
  top: "au5_channel_attention_tile"
  tile_param {
    axis: 2
    tiles: 1936
  }
}

layer {
  name: "au5_channel_attention_tile_reshape"
  type: "Reshape"
  bottom: "au5_channel_attention_tile"
  top: "au5_channel_attention_tile_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 44
      dim: -1
    }
  }
}

layer {
  name: "au5_conv32"
  type: "Convolution"
  bottom: "au5_conv31"
  top: "au5_conv32"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au5_conv32_channel_reweight"
  bottom: "au5_conv32"
  bottom: "au5_channel_attention_tile_reshape"
	top: "au5_conv32_channel_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au5_conv32_channel_reweight_bn"
  type: "BatchNorm"
  bottom: "au5_conv32_channel_reweight"
  top: "au5_conv32_channel_reweight"
}

layer {
  name: "au5_conv32_channel_reweight_bn_scale"
  type: "Scale"
  bottom: "au5_conv32_channel_reweight"
  top: "au5_conv32_channel_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au5_conv32_channel_reweight_relu"
  type: "ReLU"
  bottom: "au5_conv32_channel_reweight"
  top: "au5_conv32_channel_reweight"
}

layer {
  name: "au5_conv32_new"
  type: "Convolution"
  bottom: "au5_conv32_channel_reweight"
  top: "au5_conv32_new"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au5_conv32_new_bn"
  type: "BatchNorm"
  bottom: "au5_conv32_new"
  top: "au5_conv32_new"
}

layer {
  name: "au5_conv32_new_bn_scale"
  type: "Scale"
  bottom: "au5_conv32_new"
  top: "au5_conv32_new"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au5_conv32_new_relu"
  type: "ReLU"
  bottom: "au5_conv32_new"
  top: "au5_conv32_new"
}

layer {
  name: "au5_conv33"
  type: "Convolution"
  bottom: "au5_conv32_new"
  top: "au5_conv33"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au5_conv33_bn"
  type: "BatchNorm"
  bottom: "au5_conv33"
  top: "au5_conv33"
}

layer {
  name: "au5_conv33_bn_scale"
  type: "Scale"
  bottom: "au5_conv33"
  top: "au5_conv33"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au5_conv33_relu"
  type: "TanH"
  bottom: "au5_conv33"
  top: "au5_conv33"
}

layer {
  name: "au5_spatial_attention"
  type: "Convolution"
  bottom: "au5_conv33"
  top: "au5_spatial_attention"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au5_spatial_attention_0"
  bottom: "au5_spatial_attention"
  top: "au5_spatial_attention_0"
  type: "Power"
  power_param {
    power: 1
    scale: -1
    shift: 0
  }
}

layer {
  name: "au5_spatial_attention_concat"
  bottom: "au5_spatial_attention_0"
  bottom: "au_spatial_attention_1"     
  top: "au5_spatial_attention_concat"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

layer { 
	type: "Split" 
	name: "splitting"
  bottom: "au5_spatial_attention_concat" 
  top: "au5_spatial_attention_unary" 
  top: "au5_spatial_attention_Q0"
}

layer {
  name: "au5_spatial_attention_pred"
  type: "MultiStageMeanfieldAU3"
  bottom: "au5_spatial_attention_unary"
  bottom: "au5_spatial_attention_Q0"
  bottom: "au5_conv33"
  top: "au5_spatial_attention_pred"
  param {
    lr_mult: 0.01#learning rate for W_G
  }
  param {
  lr_mult: 0.01#learning rate for W_B
  }
  param {
  lr_mult: 0.001 #learning rate for compatiblity transform matrix
  }
  multi_stage_meanfield_au3_param {
   num_iterations: 5
   compatibility_mode: POTTS#Initialize the compatilibity transform matrix with a matrix whose diagonal is -1.
   threshold: 2
   theta_alpha: 160
   theta_beta: 3
   theta_gamma: 3
   spatial_filter_weight: 3
   bilateral_filter_weight: 5
  }
}

layer {
  name: "au5_spatial_attention_prob"
  type: "Softmax"
  bottom: "au5_spatial_attention_pred"
  top: "au5_spatial_attention_prob"
}

layer {
  name: "au5_spatial_attention_prob_slice"
  type: "Slice"
  bottom: "au5_spatial_attention_prob"
  top: "au5_spatial_attention_probNAT"
  top: "au5_spatial_attention_probAT"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

layer {
  name: "au5_spatial_attention_probNAT_silence"
  type: "Silence"
  bottom: "au5_spatial_attention_probNAT"
}

layer {
  name: "au5_spatial_attention_tile"
  type: "Tile"
  bottom: "au5_spatial_attention_probAT"
  top: "au5_spatial_attention_tile"
  tile_param {
    axis: 1
    tiles: 64
  }
}

layer {
  name: "au5_conv34"
  type: "Convolution"
  bottom: "au5_conv32_new"
  top: "au5_conv34"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au5_conv34_spatial_reweight"
  bottom:"au5_conv34"
  bottom:"au5_spatial_attention_tile"
	top:"au5_conv34_spatial_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au5_conv34_spatial_reweight_bn"
  type: "BatchNorm"
  bottom: "au5_conv34_spatial_reweight"
  top: "au5_conv34_spatial_reweight"
}

layer {
  name: "au5_conv34_spatial_reweight_bn_scale"
  type: "Scale"
  bottom: "au5_conv34_spatial_reweight"
  top: "au5_conv34_spatial_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au5_conv34_spatial_reweight_relu"
  type: "ReLU"
  bottom: "au5_conv34_spatial_reweight"
  top: "au5_conv34_spatial_reweight"
}

layer {
  name: "au5_conv35"
  type: "Convolution"
  bottom: "au5_conv34_spatial_reweight"
  top: "au5_conv35"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au5_conv35_pool"
  type: "Pooling"
  bottom: "au5_conv35"
  top: "au5_conv35_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au5_fc"
  type: "InnerProduct"
  bottom: "au5_conv35_pool"
  top: "au5_fc"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au6_conv31"
  type: "Convolution"
  bottom: "pool2"
  top: "au6_conv31"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au6_conv31_bn"
  type: "BatchNorm"
  bottom: "au6_conv31"
  top: "au6_conv31"
}

layer {
  name: "au6_conv31_bn_scale"
  type: "Scale"
  bottom: "au6_conv31"
  top: "au6_conv31"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au6_conv31_relu"
  type: "ReLU"
  bottom: "au6_conv31"
  top: "au6_conv31"
}

layer {
  name: "au6_conv31_pool"
  type: "Pooling"
  bottom: "au6_conv31"
  top: "au6_conv31_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au6_channel_attention"
  type: "InnerProduct"
  bottom: "au6_conv31_pool"
  top: "au6_channel_attention"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au6_channel_attention_sigmoid"
  bottom: "au6_channel_attention"
  top: "au6_channel_attention_sigmoid"
  type: "Sigmoid"
}

layer {
  name: "au6_channel_attention_sigmoid_reshape"
  type: "Reshape"
  bottom: "au6_channel_attention_sigmoid"
  top: "au6_channel_attention_sigmoid_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 1
      dim: 1
    }
  }
}

layer {
  name: "au6_channel_attention_tile"
  type: "Tile"
  bottom: "au6_channel_attention_sigmoid_reshape"
  top: "au6_channel_attention_tile"
  tile_param {
    axis: 2
    tiles: 1936
  }
}

layer {
  name: "au6_channel_attention_tile_reshape"
  type: "Reshape"
  bottom: "au6_channel_attention_tile"
  top: "au6_channel_attention_tile_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 44
      dim: -1
    }
  }
}

layer {
  name: "au6_conv32"
  type: "Convolution"
  bottom: "au6_conv31"
  top: "au6_conv32"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au6_conv32_channel_reweight"
  bottom: "au6_conv32"
  bottom: "au6_channel_attention_tile_reshape"
	top: "au6_conv32_channel_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au6_conv32_channel_reweight_bn"
  type: "BatchNorm"
  bottom: "au6_conv32_channel_reweight"
  top: "au6_conv32_channel_reweight"
}

layer {
  name: "au6_conv32_channel_reweight_bn_scale"
  type: "Scale"
  bottom: "au6_conv32_channel_reweight"
  top: "au6_conv32_channel_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au6_conv32_channel_reweight_relu"
  type: "ReLU"
  bottom: "au6_conv32_channel_reweight"
  top: "au6_conv32_channel_reweight"
}

layer {
  name: "au6_conv32_new"
  type: "Convolution"
  bottom: "au6_conv32_channel_reweight"
  top: "au6_conv32_new"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au6_conv32_new_bn"
  type: "BatchNorm"
  bottom: "au6_conv32_new"
  top: "au6_conv32_new"
}

layer {
  name: "au6_conv32_new_bn_scale"
  type: "Scale"
  bottom: "au6_conv32_new"
  top: "au6_conv32_new"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au6_conv32_new_relu"
  type: "ReLU"
  bottom: "au6_conv32_new"
  top: "au6_conv32_new"
}

layer {
  name: "au6_conv33"
  type: "Convolution"
  bottom: "au6_conv32_new"
  top: "au6_conv33"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au6_conv33_bn"
  type: "BatchNorm"
  bottom: "au6_conv33"
  top: "au6_conv33"
}

layer {
  name: "au6_conv33_bn_scale"
  type: "Scale"
  bottom: "au6_conv33"
  top: "au6_conv33"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au6_conv33_relu"
  type: "TanH"
  bottom: "au6_conv33"
  top: "au6_conv33"
}

layer {
  name: "au6_spatial_attention"
  type: "Convolution"
  bottom: "au6_conv33"
  top: "au6_spatial_attention"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au6_spatial_attention_0"
  bottom: "au6_spatial_attention"
  top: "au6_spatial_attention_0"
  type: "Power"
  power_param {
    power: 1
    scale: -1
    shift: 0
  }
}

layer {
  name: "au6_spatial_attention_concat"
  bottom: "au6_spatial_attention_0"
  bottom: "au_spatial_attention_1"     
  top: "au6_spatial_attention_concat"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

layer { 
	type: "Split" 
	name: "splitting"
  bottom: "au6_spatial_attention_concat" 
  top: "au6_spatial_attention_unary" 
  top: "au6_spatial_attention_Q0"
}

layer {
  name: "au6_spatial_attention_pred"
  type: "MultiStageMeanfieldAU3"
  bottom: "au6_spatial_attention_unary"
  bottom: "au6_spatial_attention_Q0"
  bottom: "au6_conv33"
  top: "au6_spatial_attention_pred"
  param {
    lr_mult: 0.01#learning rate for W_G
  }
  param {
  lr_mult: 0.01#learning rate for W_B
  }
  param {
  lr_mult: 0.001 #learning rate for compatiblity transform matrix
  }
  multi_stage_meanfield_au3_param {
   num_iterations: 5
   compatibility_mode: POTTS#Initialize the compatilibity transform matrix with a matrix whose diagonal is -1.
   threshold: 2
   theta_alpha: 160
   theta_beta: 3
   theta_gamma: 3
   spatial_filter_weight: 3
   bilateral_filter_weight: 5
  }
}

layer {
  name: "au6_spatial_attention_prob"
  type: "Softmax"
  bottom: "au6_spatial_attention_pred"
  top: "au6_spatial_attention_prob"
}

layer {
  name: "au6_spatial_attention_prob_slice"
  type: "Slice"
  bottom: "au6_spatial_attention_prob"
  top: "au6_spatial_attention_probNAT"
  top: "au6_spatial_attention_probAT"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

layer {
  name: "au6_spatial_attention_probNAT_silence"
  type: "Silence"
  bottom: "au6_spatial_attention_probNAT"
}

layer {
  name: "au6_spatial_attention_tile"
  type: "Tile"
  bottom: "au6_spatial_attention_probAT"
  top: "au6_spatial_attention_tile"
  tile_param {
    axis: 1
    tiles: 64
  }
}

layer {
  name: "au6_conv34"
  type: "Convolution"
  bottom: "au6_conv32_new"
  top: "au6_conv34"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au6_conv34_spatial_reweight"
  bottom:"au6_conv34"
  bottom:"au6_spatial_attention_tile"
	top:"au6_conv34_spatial_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au6_conv34_spatial_reweight_bn"
  type: "BatchNorm"
  bottom: "au6_conv34_spatial_reweight"
  top: "au6_conv34_spatial_reweight"
}

layer {
  name: "au6_conv34_spatial_reweight_bn_scale"
  type: "Scale"
  bottom: "au6_conv34_spatial_reweight"
  top: "au6_conv34_spatial_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au6_conv34_spatial_reweight_relu"
  type: "ReLU"
  bottom: "au6_conv34_spatial_reweight"
  top: "au6_conv34_spatial_reweight"
}

layer {
  name: "au6_conv35"
  type: "Convolution"
  bottom: "au6_conv34_spatial_reweight"
  top: "au6_conv35"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au6_conv35_pool"
  type: "Pooling"
  bottom: "au6_conv35"
  top: "au6_conv35_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au6_fc"
  type: "InnerProduct"
  bottom: "au6_conv35_pool"
  top: "au6_fc"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au7_conv31"
  type: "Convolution"
  bottom: "pool2"
  top: "au7_conv31"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au7_conv31_bn"
  type: "BatchNorm"
  bottom: "au7_conv31"
  top: "au7_conv31"
}

layer {
  name: "au7_conv31_bn_scale"
  type: "Scale"
  bottom: "au7_conv31"
  top: "au7_conv31"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au7_conv31_relu"
  type: "ReLU"
  bottom: "au7_conv31"
  top: "au7_conv31"
}

layer {
  name: "au7_conv31_pool"
  type: "Pooling"
  bottom: "au7_conv31"
  top: "au7_conv31_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au7_channel_attention"
  type: "InnerProduct"
  bottom: "au7_conv31_pool"
  top: "au7_channel_attention"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au7_channel_attention_sigmoid"
  bottom: "au7_channel_attention"
  top: "au7_channel_attention_sigmoid"
  type: "Sigmoid"
}

layer {
  name: "au7_channel_attention_sigmoid_reshape"
  type: "Reshape"
  bottom: "au7_channel_attention_sigmoid"
  top: "au7_channel_attention_sigmoid_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 1
      dim: 1
    }
  }
}

layer {
  name: "au7_channel_attention_tile"
  type: "Tile"
  bottom: "au7_channel_attention_sigmoid_reshape"
  top: "au7_channel_attention_tile"
  tile_param {
    axis: 2
    tiles: 1936
  }
}

layer {
  name: "au7_channel_attention_tile_reshape"
  type: "Reshape"
  bottom: "au7_channel_attention_tile"
  top: "au7_channel_attention_tile_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 44
      dim: -1
    }
  }
}

layer {
  name: "au7_conv32"
  type: "Convolution"
  bottom: "au7_conv31"
  top: "au7_conv32"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au7_conv32_channel_reweight"
  bottom: "au7_conv32"
  bottom: "au7_channel_attention_tile_reshape"
	top: "au7_conv32_channel_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au7_conv32_channel_reweight_bn"
  type: "BatchNorm"
  bottom: "au7_conv32_channel_reweight"
  top: "au7_conv32_channel_reweight"
}

layer {
  name: "au7_conv32_channel_reweight_bn_scale"
  type: "Scale"
  bottom: "au7_conv32_channel_reweight"
  top: "au7_conv32_channel_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au7_conv32_channel_reweight_relu"
  type: "ReLU"
  bottom: "au7_conv32_channel_reweight"
  top: "au7_conv32_channel_reweight"
}

layer {
  name: "au7_conv32_new"
  type: "Convolution"
  bottom: "au7_conv32_channel_reweight"
  top: "au7_conv32_new"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au7_conv32_new_bn"
  type: "BatchNorm"
  bottom: "au7_conv32_new"
  top: "au7_conv32_new"
}

layer {
  name: "au7_conv32_new_bn_scale"
  type: "Scale"
  bottom: "au7_conv32_new"
  top: "au7_conv32_new"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au7_conv32_new_relu"
  type: "ReLU"
  bottom: "au7_conv32_new"
  top: "au7_conv32_new"
}

layer {
  name: "au7_conv33"
  type: "Convolution"
  bottom: "au7_conv32_new"
  top: "au7_conv33"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au7_conv33_bn"
  type: "BatchNorm"
  bottom: "au7_conv33"
  top: "au7_conv33"
}

layer {
  name: "au7_conv33_bn_scale"
  type: "Scale"
  bottom: "au7_conv33"
  top: "au7_conv33"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au7_conv33_relu"
  type: "TanH"
  bottom: "au7_conv33"
  top: "au7_conv33"
}

layer {
  name: "au7_spatial_attention"
  type: "Convolution"
  bottom: "au7_conv33"
  top: "au7_spatial_attention"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au7_spatial_attention_0"
  bottom: "au7_spatial_attention"
  top: "au7_spatial_attention_0"
  type: "Power"
  power_param {
    power: 1
    scale: -1
    shift: 0
  }
}

layer {
  name: "au7_spatial_attention_concat"
  bottom: "au7_spatial_attention_0"
  bottom: "au_spatial_attention_1"     
  top: "au7_spatial_attention_concat"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

layer { 
	type: "Split" 
	name: "splitting"
  bottom: "au7_spatial_attention_concat" 
  top: "au7_spatial_attention_unary" 
  top: "au7_spatial_attention_Q0"
}

layer {
  name: "au7_spatial_attention_pred"
  type: "MultiStageMeanfieldAU3"
  bottom: "au7_spatial_attention_unary"
  bottom: "au7_spatial_attention_Q0"
  bottom: "au7_conv33"
  top: "au7_spatial_attention_pred"
  param {
    lr_mult: 0.01#learning rate for W_G
  }
  param {
  lr_mult: 0.01#learning rate for W_B
  }
  param {
  lr_mult: 0.001 #learning rate for compatiblity transform matrix
  }
  multi_stage_meanfield_au3_param {
   num_iterations: 5
   compatibility_mode: POTTS#Initialize the compatilibity transform matrix with a matrix whose diagonal is -1.
   threshold: 2
   theta_alpha: 160
   theta_beta: 3
   theta_gamma: 3
   spatial_filter_weight: 3
   bilateral_filter_weight: 5
  }
}

layer {
  name: "au7_spatial_attention_prob"
  type: "Softmax"
  bottom: "au7_spatial_attention_pred"
  top: "au7_spatial_attention_prob"
}

layer {
  name: "au7_spatial_attention_prob_slice"
  type: "Slice"
  bottom: "au7_spatial_attention_prob"
  top: "au7_spatial_attention_probNAT"
  top: "au7_spatial_attention_probAT"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

layer {
  name: "au7_spatial_attention_probNAT_silence"
  type: "Silence"
  bottom: "au7_spatial_attention_probNAT"
}

layer {
  name: "au7_spatial_attention_tile"
  type: "Tile"
  bottom: "au7_spatial_attention_probAT"
  top: "au7_spatial_attention_tile"
  tile_param {
    axis: 1
    tiles: 64
  }
}

layer {
  name: "au7_conv34"
  type: "Convolution"
  bottom: "au7_conv32_new"
  top: "au7_conv34"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au7_conv34_spatial_reweight"
  bottom:"au7_conv34"
  bottom:"au7_spatial_attention_tile"
	top:"au7_conv34_spatial_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au7_conv34_spatial_reweight_bn"
  type: "BatchNorm"
  bottom: "au7_conv34_spatial_reweight"
  top: "au7_conv34_spatial_reweight"
}

layer {
  name: "au7_conv34_spatial_reweight_bn_scale"
  type: "Scale"
  bottom: "au7_conv34_spatial_reweight"
  top: "au7_conv34_spatial_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au7_conv34_spatial_reweight_relu"
  type: "ReLU"
  bottom: "au7_conv34_spatial_reweight"
  top: "au7_conv34_spatial_reweight"
}

layer {
  name: "au7_conv35"
  type: "Convolution"
  bottom: "au7_conv34_spatial_reweight"
  top: "au7_conv35"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au7_conv35_pool"
  type: "Pooling"
  bottom: "au7_conv35"
  top: "au7_conv35_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au7_fc"
  type: "InnerProduct"
  bottom: "au7_conv35_pool"
  top: "au7_fc"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au8_conv31"
  type: "Convolution"
  bottom: "pool2"
  top: "au8_conv31"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au8_conv31_bn"
  type: "BatchNorm"
  bottom: "au8_conv31"
  top: "au8_conv31"
}

layer {
  name: "au8_conv31_bn_scale"
  type: "Scale"
  bottom: "au8_conv31"
  top: "au8_conv31"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au8_conv31_relu"
  type: "ReLU"
  bottom: "au8_conv31"
  top: "au8_conv31"
}

layer {
  name: "au8_conv31_pool"
  type: "Pooling"
  bottom: "au8_conv31"
  top: "au8_conv31_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au8_channel_attention"
  type: "InnerProduct"
  bottom: "au8_conv31_pool"
  top: "au8_channel_attention"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au8_channel_attention_sigmoid"
  bottom: "au8_channel_attention"
  top: "au8_channel_attention_sigmoid"
  type: "Sigmoid"
}

layer {
  name: "au8_channel_attention_sigmoid_reshape"
  type: "Reshape"
  bottom: "au8_channel_attention_sigmoid"
  top: "au8_channel_attention_sigmoid_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 1
      dim: 1
    }
  }
}

layer {
  name: "au8_channel_attention_tile"
  type: "Tile"
  bottom: "au8_channel_attention_sigmoid_reshape"
  top: "au8_channel_attention_tile"
  tile_param {
    axis: 2
    tiles: 1936
  }
}

layer {
  name: "au8_channel_attention_tile_reshape"
  type: "Reshape"
  bottom: "au8_channel_attention_tile"
  top: "au8_channel_attention_tile_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 44
      dim: -1
    }
  }
}

layer {
  name: "au8_conv32"
  type: "Convolution"
  bottom: "au8_conv31"
  top: "au8_conv32"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au8_conv32_channel_reweight"
  bottom: "au8_conv32"
  bottom: "au8_channel_attention_tile_reshape"
	top: "au8_conv32_channel_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au8_conv32_channel_reweight_bn"
  type: "BatchNorm"
  bottom: "au8_conv32_channel_reweight"
  top: "au8_conv32_channel_reweight"
}

layer {
  name: "au8_conv32_channel_reweight_bn_scale"
  type: "Scale"
  bottom: "au8_conv32_channel_reweight"
  top: "au8_conv32_channel_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au8_conv32_channel_reweight_relu"
  type: "ReLU"
  bottom: "au8_conv32_channel_reweight"
  top: "au8_conv32_channel_reweight"
}

layer {
  name: "au8_conv32_new"
  type: "Convolution"
  bottom: "au8_conv32_channel_reweight"
  top: "au8_conv32_new"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au8_conv32_new_bn"
  type: "BatchNorm"
  bottom: "au8_conv32_new"
  top: "au8_conv32_new"
}

layer {
  name: "au8_conv32_new_bn_scale"
  type: "Scale"
  bottom: "au8_conv32_new"
  top: "au8_conv32_new"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au8_conv32_new_relu"
  type: "ReLU"
  bottom: "au8_conv32_new"
  top: "au8_conv32_new"
}

layer {
  name: "au8_conv33"
  type: "Convolution"
  bottom: "au8_conv32_new"
  top: "au8_conv33"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au8_conv33_bn"
  type: "BatchNorm"
  bottom: "au8_conv33"
  top: "au8_conv33"
}

layer {
  name: "au8_conv33_bn_scale"
  type: "Scale"
  bottom: "au8_conv33"
  top: "au8_conv33"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au8_conv33_relu"
  type: "TanH"
  bottom: "au8_conv33"
  top: "au8_conv33"
}

layer {
  name: "au8_spatial_attention"
  type: "Convolution"
  bottom: "au8_conv33"
  top: "au8_spatial_attention"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au8_spatial_attention_0"
  bottom: "au8_spatial_attention"
  top: "au8_spatial_attention_0"
  type: "Power"
  power_param {
    power: 1
    scale: -1
    shift: 0
  }
}

layer {
  name: "au8_spatial_attention_concat"
  bottom: "au8_spatial_attention_0"
  bottom: "au_spatial_attention_1"     
  top: "au8_spatial_attention_concat"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

layer { 
	type: "Split" 
	name: "splitting"
  bottom: "au8_spatial_attention_concat" 
  top: "au8_spatial_attention_unary" 
  top: "au8_spatial_attention_Q0"
}

layer {
  name: "au8_spatial_attention_pred"
  type: "MultiStageMeanfieldAU3"
  bottom: "au8_spatial_attention_unary"
  bottom: "au8_spatial_attention_Q0"
  bottom: "au8_conv33"
  top: "au8_spatial_attention_pred"
  param {
    lr_mult: 0.01#learning rate for W_G
  }
  param {
  lr_mult: 0.01#learning rate for W_B
  }
  param {
  lr_mult: 0.001 #learning rate for compatiblity transform matrix
  }
  multi_stage_meanfield_au3_param {
   num_iterations: 5
   compatibility_mode: POTTS#Initialize the compatilibity transform matrix with a matrix whose diagonal is -1.
   threshold: 2
   theta_alpha: 160
   theta_beta: 3
   theta_gamma: 3
   spatial_filter_weight: 3
   bilateral_filter_weight: 5
  }
}

layer {
  name: "au8_spatial_attention_prob"
  type: "Softmax"
  bottom: "au8_spatial_attention_pred"
  top: "au8_spatial_attention_prob"
}

layer {
  name: "au8_spatial_attention_prob_slice"
  type: "Slice"
  bottom: "au8_spatial_attention_prob"
  top: "au8_spatial_attention_probNAT"
  top: "au8_spatial_attention_probAT"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

layer {
  name: "au8_spatial_attention_probNAT_silence"
  type: "Silence"
  bottom: "au8_spatial_attention_probNAT"
}

layer {
  name: "au8_spatial_attention_tile"
  type: "Tile"
  bottom: "au8_spatial_attention_probAT"
  top: "au8_spatial_attention_tile"
  tile_param {
    axis: 1
    tiles: 64
  }
}

layer {
  name: "au8_conv34"
  type: "Convolution"
  bottom: "au8_conv32_new"
  top: "au8_conv34"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au8_conv34_spatial_reweight"
  bottom:"au8_conv34"
  bottom:"au8_spatial_attention_tile"
	top:"au8_conv34_spatial_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au8_conv34_spatial_reweight_bn"
  type: "BatchNorm"
  bottom: "au8_conv34_spatial_reweight"
  top: "au8_conv34_spatial_reweight"
}

layer {
  name: "au8_conv34_spatial_reweight_bn_scale"
  type: "Scale"
  bottom: "au8_conv34_spatial_reweight"
  top: "au8_conv34_spatial_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au8_conv34_spatial_reweight_relu"
  type: "ReLU"
  bottom: "au8_conv34_spatial_reweight"
  top: "au8_conv34_spatial_reweight"
}

layer {
  name: "au8_conv35"
  type: "Convolution"
  bottom: "au8_conv34_spatial_reweight"
  top: "au8_conv35"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au8_conv35_pool"
  type: "Pooling"
  bottom: "au8_conv35"
  top: "au8_conv35_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au8_fc"
  type: "InnerProduct"
  bottom: "au8_conv35_pool"
  top: "au8_fc"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au9_conv31"
  type: "Convolution"
  bottom: "pool2"
  top: "au9_conv31"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au9_conv31_bn"
  type: "BatchNorm"
  bottom: "au9_conv31"
  top: "au9_conv31"
}

layer {
  name: "au9_conv31_bn_scale"
  type: "Scale"
  bottom: "au9_conv31"
  top: "au9_conv31"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au9_conv31_relu"
  type: "ReLU"
  bottom: "au9_conv31"
  top: "au9_conv31"
}

layer {
  name: "au9_conv31_pool"
  type: "Pooling"
  bottom: "au9_conv31"
  top: "au9_conv31_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au9_channel_attention"
  type: "InnerProduct"
  bottom: "au9_conv31_pool"
  top: "au9_channel_attention"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au9_channel_attention_sigmoid"
  bottom: "au9_channel_attention"
  top: "au9_channel_attention_sigmoid"
  type: "Sigmoid"
}

layer {
  name: "au9_channel_attention_sigmoid_reshape"
  type: "Reshape"
  bottom: "au9_channel_attention_sigmoid"
  top: "au9_channel_attention_sigmoid_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 1
      dim: 1
    }
  }
}

layer {
  name: "au9_channel_attention_tile"
  type: "Tile"
  bottom: "au9_channel_attention_sigmoid_reshape"
  top: "au9_channel_attention_tile"
  tile_param {
    axis: 2
    tiles: 1936
  }
}

layer {
  name: "au9_channel_attention_tile_reshape"
  type: "Reshape"
  bottom: "au9_channel_attention_tile"
  top: "au9_channel_attention_tile_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 44
      dim: -1
    }
  }
}

layer {
  name: "au9_conv32"
  type: "Convolution"
  bottom: "au9_conv31"
  top: "au9_conv32"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au9_conv32_channel_reweight"
  bottom: "au9_conv32"
  bottom: "au9_channel_attention_tile_reshape"
	top: "au9_conv32_channel_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au9_conv32_channel_reweight_bn"
  type: "BatchNorm"
  bottom: "au9_conv32_channel_reweight"
  top: "au9_conv32_channel_reweight"
}

layer {
  name: "au9_conv32_channel_reweight_bn_scale"
  type: "Scale"
  bottom: "au9_conv32_channel_reweight"
  top: "au9_conv32_channel_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au9_conv32_channel_reweight_relu"
  type: "ReLU"
  bottom: "au9_conv32_channel_reweight"
  top: "au9_conv32_channel_reweight"
}

layer {
  name: "au9_conv32_new"
  type: "Convolution"
  bottom: "au9_conv32_channel_reweight"
  top: "au9_conv32_new"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au9_conv32_new_bn"
  type: "BatchNorm"
  bottom: "au9_conv32_new"
  top: "au9_conv32_new"
}

layer {
  name: "au9_conv32_new_bn_scale"
  type: "Scale"
  bottom: "au9_conv32_new"
  top: "au9_conv32_new"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au9_conv32_new_relu"
  type: "ReLU"
  bottom: "au9_conv32_new"
  top: "au9_conv32_new"
}

layer {
  name: "au9_conv33"
  type: "Convolution"
  bottom: "au9_conv32_new"
  top: "au9_conv33"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au9_conv33_bn"
  type: "BatchNorm"
  bottom: "au9_conv33"
  top: "au9_conv33"
}

layer {
  name: "au9_conv33_bn_scale"
  type: "Scale"
  bottom: "au9_conv33"
  top: "au9_conv33"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au9_conv33_relu"
  type: "TanH"
  bottom: "au9_conv33"
  top: "au9_conv33"
}

layer {
  name: "au9_spatial_attention"
  type: "Convolution"
  bottom: "au9_conv33"
  top: "au9_spatial_attention"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au9_spatial_attention_0"
  bottom: "au9_spatial_attention"
  top: "au9_spatial_attention_0"
  type: "Power"
  power_param {
    power: 1
    scale: -1
    shift: 0
  }
}

layer {
  name: "au9_spatial_attention_concat"
  bottom: "au9_spatial_attention_0"
  bottom: "au_spatial_attention_1"     
  top: "au9_spatial_attention_concat"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

layer { 
	type: "Split" 
	name: "splitting"
  bottom: "au9_spatial_attention_concat" 
  top: "au9_spatial_attention_unary" 
  top: "au9_spatial_attention_Q0"
}

layer {
  name: "au9_spatial_attention_pred"
  type: "MultiStageMeanfieldAU3"
  bottom: "au9_spatial_attention_unary"
  bottom: "au9_spatial_attention_Q0"
  bottom: "au9_conv33"
  top: "au9_spatial_attention_pred"
  param {
    lr_mult: 0.01#learning rate for W_G
  }
  param {
  lr_mult: 0.01#learning rate for W_B
  }
  param {
  lr_mult: 0.001 #learning rate for compatiblity transform matrix
  }
  multi_stage_meanfield_au3_param {
   num_iterations: 5
   compatibility_mode: POTTS#Initialize the compatilibity transform matrix with a matrix whose diagonal is -1.
   threshold: 2
   theta_alpha: 160
   theta_beta: 3
   theta_gamma: 3
   spatial_filter_weight: 3
   bilateral_filter_weight: 5
  }
}

layer {
  name: "au9_spatial_attention_prob"
  type: "Softmax"
  bottom: "au9_spatial_attention_pred"
  top: "au9_spatial_attention_prob"
}

layer {
  name: "au9_spatial_attention_prob_slice"
  type: "Slice"
  bottom: "au9_spatial_attention_prob"
  top: "au9_spatial_attention_probNAT"
  top: "au9_spatial_attention_probAT"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

layer {
  name: "au9_spatial_attention_probNAT_silence"
  type: "Silence"
  bottom: "au9_spatial_attention_probNAT"
}

layer {
  name: "au9_spatial_attention_tile"
  type: "Tile"
  bottom: "au9_spatial_attention_probAT"
  top: "au9_spatial_attention_tile"
  tile_param {
    axis: 1
    tiles: 64
  }
}

layer {
  name: "au9_conv34"
  type: "Convolution"
  bottom: "au9_conv32_new"
  top: "au9_conv34"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au9_conv34_spatial_reweight"
  bottom:"au9_conv34"
  bottom:"au9_spatial_attention_tile"
	top:"au9_conv34_spatial_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au9_conv34_spatial_reweight_bn"
  type: "BatchNorm"
  bottom: "au9_conv34_spatial_reweight"
  top: "au9_conv34_spatial_reweight"
}

layer {
  name: "au9_conv34_spatial_reweight_bn_scale"
  type: "Scale"
  bottom: "au9_conv34_spatial_reweight"
  top: "au9_conv34_spatial_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au9_conv34_spatial_reweight_relu"
  type: "ReLU"
  bottom: "au9_conv34_spatial_reweight"
  top: "au9_conv34_spatial_reweight"
}

layer {
  name: "au9_conv35"
  type: "Convolution"
  bottom: "au9_conv34_spatial_reweight"
  top: "au9_conv35"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au9_conv35_pool"
  type: "Pooling"
  bottom: "au9_conv35"
  top: "au9_conv35_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au9_fc"
  type: "InnerProduct"
  bottom: "au9_conv35_pool"
  top: "au9_fc"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au10_conv31"
  type: "Convolution"
  bottom: "pool2"
  top: "au10_conv31"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au10_conv31_bn"
  type: "BatchNorm"
  bottom: "au10_conv31"
  top: "au10_conv31"
}

layer {
  name: "au10_conv31_bn_scale"
  type: "Scale"
  bottom: "au10_conv31"
  top: "au10_conv31"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au10_conv31_relu"
  type: "ReLU"
  bottom: "au10_conv31"
  top: "au10_conv31"
}

layer {
  name: "au10_conv31_pool"
  type: "Pooling"
  bottom: "au10_conv31"
  top: "au10_conv31_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au10_channel_attention"
  type: "InnerProduct"
  bottom: "au10_conv31_pool"
  top: "au10_channel_attention"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au10_channel_attention_sigmoid"
  bottom: "au10_channel_attention"
  top: "au10_channel_attention_sigmoid"
  type: "Sigmoid"
}

layer {
  name: "au10_channel_attention_sigmoid_reshape"
  type: "Reshape"
  bottom: "au10_channel_attention_sigmoid"
  top: "au10_channel_attention_sigmoid_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 1
      dim: 1
    }
  }
}

layer {
  name: "au10_channel_attention_tile"
  type: "Tile"
  bottom: "au10_channel_attention_sigmoid_reshape"
  top: "au10_channel_attention_tile"
  tile_param {
    axis: 2
    tiles: 1936
  }
}

layer {
  name: "au10_channel_attention_tile_reshape"
  type: "Reshape"
  bottom: "au10_channel_attention_tile"
  top: "au10_channel_attention_tile_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 44
      dim: -1
    }
  }
}

layer {
  name: "au10_conv32"
  type: "Convolution"
  bottom: "au10_conv31"
  top: "au10_conv32"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au10_conv32_channel_reweight"
  bottom: "au10_conv32"
  bottom: "au10_channel_attention_tile_reshape"
	top: "au10_conv32_channel_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au10_conv32_channel_reweight_bn"
  type: "BatchNorm"
  bottom: "au10_conv32_channel_reweight"
  top: "au10_conv32_channel_reweight"
}

layer {
  name: "au10_conv32_channel_reweight_bn_scale"
  type: "Scale"
  bottom: "au10_conv32_channel_reweight"
  top: "au10_conv32_channel_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au10_conv32_channel_reweight_relu"
  type: "ReLU"
  bottom: "au10_conv32_channel_reweight"
  top: "au10_conv32_channel_reweight"
}

layer {
  name: "au10_conv32_new"
  type: "Convolution"
  bottom: "au10_conv32_channel_reweight"
  top: "au10_conv32_new"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au10_conv32_new_bn"
  type: "BatchNorm"
  bottom: "au10_conv32_new"
  top: "au10_conv32_new"
}

layer {
  name: "au10_conv32_new_bn_scale"
  type: "Scale"
  bottom: "au10_conv32_new"
  top: "au10_conv32_new"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au10_conv32_new_relu"
  type: "ReLU"
  bottom: "au10_conv32_new"
  top: "au10_conv32_new"
}

layer {
  name: "au10_conv33"
  type: "Convolution"
  bottom: "au10_conv32_new"
  top: "au10_conv33"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au10_conv33_bn"
  type: "BatchNorm"
  bottom: "au10_conv33"
  top: "au10_conv33"
}

layer {
  name: "au10_conv33_bn_scale"
  type: "Scale"
  bottom: "au10_conv33"
  top: "au10_conv33"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au10_conv33_relu"
  type: "TanH"
  bottom: "au10_conv33"
  top: "au10_conv33"
}

layer {
  name: "au10_spatial_attention"
  type: "Convolution"
  bottom: "au10_conv33"
  top: "au10_spatial_attention"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au10_spatial_attention_0"
  bottom: "au10_spatial_attention"
  top: "au10_spatial_attention_0"
  type: "Power"
  power_param {
    power: 1
    scale: -1
    shift: 0
  }
}

layer {
  name: "au10_spatial_attention_concat"
  bottom: "au10_spatial_attention_0"
  bottom: "au_spatial_attention_1"     
  top: "au10_spatial_attention_concat"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

layer { 
	type: "Split" 
	name: "splitting"
  bottom: "au10_spatial_attention_concat" 
  top: "au10_spatial_attention_unary" 
  top: "au10_spatial_attention_Q0"
}

layer {
  name: "au10_spatial_attention_pred"
  type: "MultiStageMeanfieldAU3"
  bottom: "au10_spatial_attention_unary"
  bottom: "au10_spatial_attention_Q0"
  bottom: "au10_conv33"
  top: "au10_spatial_attention_pred"
  param {
    lr_mult: 0.01#learning rate for W_G
  }
  param {
  lr_mult: 0.01#learning rate for W_B
  }
  param {
  lr_mult: 0.001 #learning rate for compatiblity transform matrix
  }
  multi_stage_meanfield_au3_param {
   num_iterations: 5
   compatibility_mode: POTTS#Initialize the compatilibity transform matrix with a matrix whose diagonal is -1.
   threshold: 2
   theta_alpha: 160
   theta_beta: 3
   theta_gamma: 3
   spatial_filter_weight: 3
   bilateral_filter_weight: 5
  }
}

layer {
  name: "au10_spatial_attention_prob"
  type: "Softmax"
  bottom: "au10_spatial_attention_pred"
  top: "au10_spatial_attention_prob"
}

layer {
  name: "au10_spatial_attention_prob_slice"
  type: "Slice"
  bottom: "au10_spatial_attention_prob"
  top: "au10_spatial_attention_probNAT"
  top: "au10_spatial_attention_probAT"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

layer {
  name: "au10_spatial_attention_probNAT_silence"
  type: "Silence"
  bottom: "au10_spatial_attention_probNAT"
}

layer {
  name: "au10_spatial_attention_tile"
  type: "Tile"
  bottom: "au10_spatial_attention_probAT"
  top: "au10_spatial_attention_tile"
  tile_param {
    axis: 1
    tiles: 64
  }
}

layer {
  name: "au10_conv34"
  type: "Convolution"
  bottom: "au10_conv32_new"
  top: "au10_conv34"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au10_conv34_spatial_reweight"
  bottom:"au10_conv34"
  bottom:"au10_spatial_attention_tile"
	top:"au10_conv34_spatial_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au10_conv34_spatial_reweight_bn"
  type: "BatchNorm"
  bottom: "au10_conv34_spatial_reweight"
  top: "au10_conv34_spatial_reweight"
}

layer {
  name: "au10_conv34_spatial_reweight_bn_scale"
  type: "Scale"
  bottom: "au10_conv34_spatial_reweight"
  top: "au10_conv34_spatial_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au10_conv34_spatial_reweight_relu"
  type: "ReLU"
  bottom: "au10_conv34_spatial_reweight"
  top: "au10_conv34_spatial_reweight"
}

layer {
  name: "au10_conv35"
  type: "Convolution"
  bottom: "au10_conv34_spatial_reweight"
  top: "au10_conv35"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au10_conv35_pool"
  type: "Pooling"
  bottom: "au10_conv35"
  top: "au10_conv35_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au10_fc"
  type: "InnerProduct"
  bottom: "au10_conv35_pool"
  top: "au10_fc"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au11_conv31"
  type: "Convolution"
  bottom: "pool2"
  top: "au11_conv31"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au11_conv31_bn"
  type: "BatchNorm"
  bottom: "au11_conv31"
  top: "au11_conv31"
}

layer {
  name: "au11_conv31_bn_scale"
  type: "Scale"
  bottom: "au11_conv31"
  top: "au11_conv31"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au11_conv31_relu"
  type: "ReLU"
  bottom: "au11_conv31"
  top: "au11_conv31"
}

layer {
  name: "au11_conv31_pool"
  type: "Pooling"
  bottom: "au11_conv31"
  top: "au11_conv31_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au11_channel_attention"
  type: "InnerProduct"
  bottom: "au11_conv31_pool"
  top: "au11_channel_attention"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au11_channel_attention_sigmoid"
  bottom: "au11_channel_attention"
  top: "au11_channel_attention_sigmoid"
  type: "Sigmoid"
}

layer {
  name: "au11_channel_attention_sigmoid_reshape"
  type: "Reshape"
  bottom: "au11_channel_attention_sigmoid"
  top: "au11_channel_attention_sigmoid_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 1
      dim: 1
    }
  }
}

layer {
  name: "au11_channel_attention_tile"
  type: "Tile"
  bottom: "au11_channel_attention_sigmoid_reshape"
  top: "au11_channel_attention_tile"
  tile_param {
    axis: 2
    tiles: 1936
  }
}

layer {
  name: "au11_channel_attention_tile_reshape"
  type: "Reshape"
  bottom: "au11_channel_attention_tile"
  top: "au11_channel_attention_tile_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 44
      dim: -1
    }
  }
}

layer {
  name: "au11_conv32"
  type: "Convolution"
  bottom: "au11_conv31"
  top: "au11_conv32"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au11_conv32_channel_reweight"
  bottom: "au11_conv32"
  bottom: "au11_channel_attention_tile_reshape"
	top: "au11_conv32_channel_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au11_conv32_channel_reweight_bn"
  type: "BatchNorm"
  bottom: "au11_conv32_channel_reweight"
  top: "au11_conv32_channel_reweight"
}

layer {
  name: "au11_conv32_channel_reweight_bn_scale"
  type: "Scale"
  bottom: "au11_conv32_channel_reweight"
  top: "au11_conv32_channel_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au11_conv32_channel_reweight_relu"
  type: "ReLU"
  bottom: "au11_conv32_channel_reweight"
  top: "au11_conv32_channel_reweight"
}

layer {
  name: "au11_conv32_new"
  type: "Convolution"
  bottom: "au11_conv32_channel_reweight"
  top: "au11_conv32_new"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au11_conv32_new_bn"
  type: "BatchNorm"
  bottom: "au11_conv32_new"
  top: "au11_conv32_new"
}

layer {
  name: "au11_conv32_new_bn_scale"
  type: "Scale"
  bottom: "au11_conv32_new"
  top: "au11_conv32_new"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au11_conv32_new_relu"
  type: "ReLU"
  bottom: "au11_conv32_new"
  top: "au11_conv32_new"
}

layer {
  name: "au11_conv33"
  type: "Convolution"
  bottom: "au11_conv32_new"
  top: "au11_conv33"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au11_conv33_bn"
  type: "BatchNorm"
  bottom: "au11_conv33"
  top: "au11_conv33"
}

layer {
  name: "au11_conv33_bn_scale"
  type: "Scale"
  bottom: "au11_conv33"
  top: "au11_conv33"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au11_conv33_relu"
  type: "TanH"
  bottom: "au11_conv33"
  top: "au11_conv33"
}

layer {
  name: "au11_spatial_attention"
  type: "Convolution"
  bottom: "au11_conv33"
  top: "au11_spatial_attention"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au11_spatial_attention_0"
  bottom: "au11_spatial_attention"
  top: "au11_spatial_attention_0"
  type: "Power"
  power_param {
    power: 1
    scale: -1
    shift: 0
  }
}

layer {
  name: "au11_spatial_attention_concat"
  bottom: "au11_spatial_attention_0"
  bottom: "au_spatial_attention_1"     
  top: "au11_spatial_attention_concat"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

layer { 
	type: "Split" 
	name: "splitting"
  bottom: "au11_spatial_attention_concat" 
  top: "au11_spatial_attention_unary" 
  top: "au11_spatial_attention_Q0"
}

layer {
  name: "au11_spatial_attention_pred"
  type: "MultiStageMeanfieldAU3"
  bottom: "au11_spatial_attention_unary"
  bottom: "au11_spatial_attention_Q0"
  bottom: "au11_conv33"
  top: "au11_spatial_attention_pred"
  param {
    lr_mult: 0.01#learning rate for W_G
  }
  param {
  lr_mult: 0.01#learning rate for W_B
  }
  param {
  lr_mult: 0.001 #learning rate for compatiblity transform matrix
  }
  multi_stage_meanfield_au3_param {
   num_iterations: 5
   compatibility_mode: POTTS#Initialize the compatilibity transform matrix with a matrix whose diagonal is -1.
   threshold: 2
   theta_alpha: 160
   theta_beta: 3
   theta_gamma: 3
   spatial_filter_weight: 3
   bilateral_filter_weight: 5
  }
}

layer {
  name: "au11_spatial_attention_prob"
  type: "Softmax"
  bottom: "au11_spatial_attention_pred"
  top: "au11_spatial_attention_prob"
}

layer {
  name: "au11_spatial_attention_prob_slice"
  type: "Slice"
  bottom: "au11_spatial_attention_prob"
  top: "au11_spatial_attention_probNAT"
  top: "au11_spatial_attention_probAT"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

layer {
  name: "au11_spatial_attention_probNAT_silence"
  type: "Silence"
  bottom: "au11_spatial_attention_probNAT"
}

layer {
  name: "au11_spatial_attention_tile"
  type: "Tile"
  bottom: "au11_spatial_attention_probAT"
  top: "au11_spatial_attention_tile"
  tile_param {
    axis: 1
    tiles: 64
  }
}

layer {
  name: "au11_conv34"
  type: "Convolution"
  bottom: "au11_conv32_new"
  top: "au11_conv34"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au11_conv34_spatial_reweight"
  bottom:"au11_conv34"
  bottom:"au11_spatial_attention_tile"
	top:"au11_conv34_spatial_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au11_conv34_spatial_reweight_bn"
  type: "BatchNorm"
  bottom: "au11_conv34_spatial_reweight"
  top: "au11_conv34_spatial_reweight"
}

layer {
  name: "au11_conv34_spatial_reweight_bn_scale"
  type: "Scale"
  bottom: "au11_conv34_spatial_reweight"
  top: "au11_conv34_spatial_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au11_conv34_spatial_reweight_relu"
  type: "ReLU"
  bottom: "au11_conv34_spatial_reweight"
  top: "au11_conv34_spatial_reweight"
}

layer {
  name: "au11_conv35"
  type: "Convolution"
  bottom: "au11_conv34_spatial_reweight"
  top: "au11_conv35"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au11_conv35_pool"
  type: "Pooling"
  bottom: "au11_conv35"
  top: "au11_conv35_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au11_fc"
  type: "InnerProduct"
  bottom: "au11_conv35_pool"
  top: "au11_fc"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au12_conv31"
  type: "Convolution"
  bottom: "pool2"
  top: "au12_conv31"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au12_conv31_bn"
  type: "BatchNorm"
  bottom: "au12_conv31"
  top: "au12_conv31"
}

layer {
  name: "au12_conv31_bn_scale"
  type: "Scale"
  bottom: "au12_conv31"
  top: "au12_conv31"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au12_conv31_relu"
  type: "ReLU"
  bottom: "au12_conv31"
  top: "au12_conv31"
}

layer {
  name: "au12_conv31_pool"
  type: "Pooling"
  bottom: "au12_conv31"
  top: "au12_conv31_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au12_channel_attention"
  type: "InnerProduct"
  bottom: "au12_conv31_pool"
  top: "au12_channel_attention"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au12_channel_attention_sigmoid"
  bottom: "au12_channel_attention"
  top: "au12_channel_attention_sigmoid"
  type: "Sigmoid"
}

layer {
  name: "au12_channel_attention_sigmoid_reshape"
  type: "Reshape"
  bottom: "au12_channel_attention_sigmoid"
  top: "au12_channel_attention_sigmoid_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 1
      dim: 1
    }
  }
}

layer {
  name: "au12_channel_attention_tile"
  type: "Tile"
  bottom: "au12_channel_attention_sigmoid_reshape"
  top: "au12_channel_attention_tile"
  tile_param {
    axis: 2
    tiles: 1936
  }
}

layer {
  name: "au12_channel_attention_tile_reshape"
  type: "Reshape"
  bottom: "au12_channel_attention_tile"
  top: "au12_channel_attention_tile_reshape"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 0
      dim: 44
      dim: -1
    }
  }
}

layer {
  name: "au12_conv32"
  type: "Convolution"
  bottom: "au12_conv31"
  top: "au12_conv32"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au12_conv32_channel_reweight"
  bottom: "au12_conv32"
  bottom: "au12_channel_attention_tile_reshape"
	top: "au12_conv32_channel_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au12_conv32_channel_reweight_bn"
  type: "BatchNorm"
  bottom: "au12_conv32_channel_reweight"
  top: "au12_conv32_channel_reweight"
}

layer {
  name: "au12_conv32_channel_reweight_bn_scale"
  type: "Scale"
  bottom: "au12_conv32_channel_reweight"
  top: "au12_conv32_channel_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au12_conv32_channel_reweight_relu"
  type: "ReLU"
  bottom: "au12_conv32_channel_reweight"
  top: "au12_conv32_channel_reweight"
}

layer {
  name: "au12_conv32_new"
  type: "Convolution"
  bottom: "au12_conv32_channel_reweight"
  top: "au12_conv32_new"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au12_conv32_new_bn"
  type: "BatchNorm"
  bottom: "au12_conv32_new"
  top: "au12_conv32_new"
}

layer {
  name: "au12_conv32_new_bn_scale"
  type: "Scale"
  bottom: "au12_conv32_new"
  top: "au12_conv32_new"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au12_conv32_new_relu"
  type: "ReLU"
  bottom: "au12_conv32_new"
  top: "au12_conv32_new"
}

layer {
  name: "au12_conv33"
  type: "Convolution"
  bottom: "au12_conv32_new"
  top: "au12_conv33"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au12_conv33_bn"
  type: "BatchNorm"
  bottom: "au12_conv33"
  top: "au12_conv33"
}

layer {
  name: "au12_conv33_bn_scale"
  type: "Scale"
  bottom: "au12_conv33"
  top: "au12_conv33"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au12_conv33_relu"
  type: "TanH"
  bottom: "au12_conv33"
  top: "au12_conv33"
}

layer {
  name: "au12_spatial_attention"
  type: "Convolution"
  bottom: "au12_conv33"
  top: "au12_spatial_attention"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au12_spatial_attention_0"
  bottom: "au12_spatial_attention"
  top: "au12_spatial_attention_0"
  type: "Power"
  power_param {
    power: 1
    scale: -1
    shift: 0
  }
}

layer {
  name: "au12_spatial_attention_concat"
  bottom: "au12_spatial_attention_0"
  bottom: "au_spatial_attention_1"     
  top: "au12_spatial_attention_concat"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

layer { 
	type: "Split" 
	name: "splitting"
  bottom: "au12_spatial_attention_concat" 
  top: "au12_spatial_attention_unary" 
  top: "au12_spatial_attention_Q0"
}

layer {
  name: "au12_spatial_attention_pred"
  type: "MultiStageMeanfieldAU3"
  bottom: "au12_spatial_attention_unary"
  bottom: "au12_spatial_attention_Q0"
  bottom: "au12_conv33"
  top: "au12_spatial_attention_pred"
  param {
    lr_mult: 0.01#learning rate for W_G
  }
  param {
  lr_mult: 0.01#learning rate for W_B
  }
  param {
  lr_mult: 0.001 #learning rate for compatiblity transform matrix
  }
  multi_stage_meanfield_au3_param {
   num_iterations: 5
   compatibility_mode: POTTS#Initialize the compatilibity transform matrix with a matrix whose diagonal is -1.
   threshold: 2
   theta_alpha: 160
   theta_beta: 3
   theta_gamma: 3
   spatial_filter_weight: 3
   bilateral_filter_weight: 5
  }
}

layer {
  name: "au12_spatial_attention_prob"
  type: "Softmax"
  bottom: "au12_spatial_attention_pred"
  top: "au12_spatial_attention_prob"
}

layer {
  name: "au12_spatial_attention_prob_slice"
  type: "Slice"
  bottom: "au12_spatial_attention_prob"
  top: "au12_spatial_attention_probNAT"
  top: "au12_spatial_attention_probAT"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

layer {
  name: "au12_spatial_attention_probNAT_silence"
  type: "Silence"
  bottom: "au12_spatial_attention_probNAT"
}

layer {
  name: "au12_spatial_attention_tile"
  type: "Tile"
  bottom: "au12_spatial_attention_probAT"
  top: "au12_spatial_attention_tile"
  tile_param {
    axis: 1
    tiles: 64
  }
}

layer {
  name: "au12_conv34"
  type: "Convolution"
  bottom: "au12_conv32_new"
  top: "au12_conv34"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer{
  type: "Eltwise"
  name: "au12_conv34_spatial_reweight"
  bottom:"au12_conv34"
  bottom:"au12_spatial_attention_tile"
	top:"au12_conv34_spatial_reweight"
	eltwise_param { 
		operation: PROD 
	}
}

layer {
  name: "au12_conv34_spatial_reweight_bn"
  type: "BatchNorm"
  bottom: "au12_conv34_spatial_reweight"
  top: "au12_conv34_spatial_reweight"
}

layer {
  name: "au12_conv34_spatial_reweight_bn_scale"
  type: "Scale"
  bottom: "au12_conv34_spatial_reweight"
  top: "au12_conv34_spatial_reweight"
  scale_param {
  	bias_term: true
  }
}

layer {
  name: "au12_conv34_spatial_reweight_relu"
  type: "ReLU"
  bottom: "au12_conv34_spatial_reweight"
  top: "au12_conv34_spatial_reweight"
}

layer {
  name: "au12_conv35"
  type: "Convolution"
  bottom: "au12_conv34_spatial_reweight"
  top: "au12_conv35"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "au12_conv35_pool"
  type: "Pooling"
  bottom: "au12_conv35"
  top: "au12_conv35_pool"
  pooling_param {
    pool: AVE
		global_pooling: true
  }
}

layer {
  name: "au12_fc"
  type: "InnerProduct"
  bottom: "au12_conv35_pool"
  top: "au12_fc"
   param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "concat_fc"
  bottom: "au1_fc"
  bottom: "au2_fc"
  bottom: "au3_fc"
  bottom: "au4_fc"
  bottom: "au5_fc"
  bottom: "au6_fc"
  bottom: "au7_fc"
  bottom: "au8_fc"
  bottom: "au9_fc"
  bottom: "au10_fc"
  bottom: "au11_fc"
  bottom: "au12_fc"
  top: "concat_fc"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

layer {
  name: "all_sigmoid_loss"
  type: "SigmoidCrossEntropyLoss"
  bottom: "concat_fc"
  bottom: "label"
  bottom: "weight"
  top: "all_sigmoid_loss"
  loss_param {
  	normalization: VALID
  }
}
